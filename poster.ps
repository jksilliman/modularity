%!PS-Adobe-2.0
%%Creator: dvips(k) 5.992 Copyright 2012 Radical Eye Software
%%Title: poster.dvi
%%CreationDate: Mon Jan  6 23:53:43 2014
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 1440 1080
%%DocumentFonts: URWPalladioL-Bold URWPalladioL-Roma NimbusSanL-Bold
%%+ CMMI12 CMMI10 CMR10 CMR12 MSBM10 CMSY10 CMMI7 CMEX10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips poster.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.01.06:2353
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 647 2012-02-12 15:03:40Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.12, 2012/02/12
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def

    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
%%%%%%%%%%%%%%%%% tools %%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 594 2011-10-31 18:13:18Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 622 2012-01-01 15:36:14Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.02, 2012/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 130 2009-08-27 08:55:03Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD551275F07B3EDF9ECA423C805F1554FD4B852061899B5682B5543
34A8AA2B7F8A20379ABE314685A1B6CAC2A5F272C6D73966499C3F42FAC164C1
01B62EF23D5B983D57F58E6E75000536FE41CB7C653067E71FB417926EE7E01E
C9602D4654DEB38E8E944CA1005281F0552695853FE9AF5FF1C1BC9FC1F606AE
FC069B4D747CB0264E9CDFB2C8A464A17F5C62AD9CA92366C0B1B4D0ED3BE5D5
861FFAD70F78C485531DEE0D4D16A08B4AA89AFF30132945873049981543092A
044B3F72DD84699E575D9B77B15F4038E34C9DB6317E1F3D30681A1387AD17D6
256CA845E3017EDB51FF4D5568AC539B2AD1B8CAB8777477B471844EDDFBE221
C0AA59FD01F838716769CAD94281CD80E994E321BBE8B9CE23A4E07F972FD556
D64E8FDD2CE8FE7B0953A8E6011F32D239CAB8AA834DA4AFBC7D85C68713B285
03BA518355B49860C9FE2CFDF692E4CEF84F07E82CDDE5172185CA6C3C68F746
A1EB429E4D27B30669C4F28FDC71624414E593CA177AE55EFF2035D5BA81AC44
A064D9A212FB41DF12E059D74E2158DB6EC7388B84DF54FC7A1A2AD7B2B59325
760E675BF35179802421B2FC13BE715ECE4EE846346EC80B6171119377D458D1
93B1F81EA3BB75B19EF330A07650344DAF45A4816FFF15F540DAF3BBDD771548
F2DA3B490834E7B4CECD9293A5DD581A348FCA723339562A07092ADCA96F8530
77AEF7EFBFC0DCD131BC23B3E4DE6BD052FF44DE28535DA58390141EF384E27C
F7F81F43138381D177F93F8082CC9D5618BDDA669AFF1099E3D76D55067C5913
28E391BA09D2429709776F04C4D5E4D04DAEBF5C475C7C3EB2EA7CB21ABBE5E7
9C53C00D98CC24C50DA84B0C80BAD02EE63F810E6A3000E8960E71B73E900327
6E22FA43B0230FE1B4402942F0B098675BF3042A3E56C84398CA62827B9DA366
0AACD877B1132EE19BB147F4CC3E2D7E75B0A8C76AA6C998C9AD482CED7C243C
96883105C1198E32511F945E117287AD86E517267E421D37EC56924C271A34C8
E8467FD1CDBBCA343468C330BFB20C2118AEF126FCEDA178B06F05E34F824317
E876691003541A45E2355C554E73BD643D68E4D5BFDE78F9CDF119D2E01AF351
EFCA20E0C938CDF1A0188FF8C9BC9D74AFE51B59D7DB152A82F73C8E74AF8F7A
BA526B8C32A43DD2AA7BB9AEDCC7EB904F2E62EB92730A7AFCE6247669F6392A
D02E447E551D1193D670F151AA96F678ACEA7000368023793876EE0F8E07FB89
8EC666EDD50D7AF917E450FBD6E5B4F65BC8E13C302933916CF2DCBB97194637
796B3BA0D2CEFAE9EE3E2CF472C6A221A71D0C319A4669BDD68ADD14047075A8
E61E67D8CEF3FCD826DE580BAD1ADD8E1B01705929B12E574DA340DFF088FE48
60F334027D7A90A3410F9C98DE681C3A017BFB5F3A48DF5E0C7969B7207FD3FE
1289FBB4C85D5CF94A2D244702B19C3EA97E2721ED42A6D158F294B190D15A3B
A5D977243DAE2474C3729807ABD6A54E5F1EED7BBF8A68948B7834ABD0D8AD29
BF21C5A10AF397B81C93625D78035861D3255A62D9094291D4A931A5B6C9FD13
4786748F47F09A024FDF7601E4B1E2D19CD470DDF48E4F47F303815A80B0F3B3
E59A954E24599C6DA36FCC068A8C04EB867913F793953C3C6286D430E32E5032
85254EB102C0A76C5BC60035C1375733DC721D2A1CD80ECB08523C2279EF3232
993E74FCF7BB7D1D8C54609F01687DA58E9AD28E6E3CF58D81FAF3C68C4249B0
E0B8E2CC9E0F7829AD51757DB889CA1551A47537FB35E83BF47DD7CBAA8677D4
E45673A5BD6D0F4E8438A8450FE1C4198E61EF3537FE93DD7F0C49A63CB57A8F
422670A5A6B5A629D26021738105BCEDBD579D71AB0FA02D8CB9777BECA40A72
D4FBF7876009CC5D804B15B9C2204F23961456B61D69BD455269A2A7EFECFC2D
A6ED47D61F83587DDF467DF897A0D1A9C12540D646EEBCD454B0495D12C5BC44
24BB3042979D53166F97F6AAA3880F7ED59B1E09E4044F8B2A5FB6ADF66C3636
AAA627012599A54EBB403D19C440E321A5BBCB487A4E725F55512FD97E28902B
04B7A21304ABD28C111D3E85E18CB379A64338700505FDE7D925513FAC2C401D
4B96E5478CDA099FC0099D4960C0932A8487BD2447BCBB4C99E0197E7BBCA2E4
EA763F00CD1B3208D4B54F6F60E07755DA56981C2F27641DB23154E7A16FF886
9A119D79DE992CBFAE7629BEE50F66E15B6B72E6E8BEE7F50CECE082FA70B8BC
E4EAC95331AFCC85724ADD5DBD27252A40AD6910CA9822840877F9C7D7DBE60D
14C94C2B251FAC21D8FFA02B8BA8E1F536758CFE2834077CEAE16C6A5AE7D722
95844DF6C9BB4FC3E98AB32D3FB1B1BB80D07F5B3B9595120372D45806B29BBA
31817AA2FCF3E2DE67DC78B0025324B818204ADDB57372105F841A259EF699DB
0CD08D81478BA5733B396AB946BB2EA31EA37F257398CE1E359B28940FB02892
F73D16FB82BCB6BF1A16587FBD71F44A2A99BE61534F8E7AE523E0362AE977FE
D22B5D04F2E705895050052DF6A8A812C1CC027C03A5AFDD607D5B98692B9BAE
8EF898B0A153D676F5D5AA1EDE8FE17119F31E5A942286CBB0243ECBF6A0B740
BE51D4E04185CB275BD5A80059570879BF58418C2C0B778E34EC1DA9F026BDF0
6DAEF913161F2803322FE37757C007520C0C60EA4A4715870F9A8440F10FC24D
804B006C001EC16E6D0058760CB450E311784DC2D7A05416DCC9CE10EABBFB03
406BD6CD601512DDA30910F2626FB16E57A7E1C4993BE974CED37D37E275E431
C537A6B599C222F94EDC99DE5510DEBE97B8C11D95DF2B43C2C1B991E045743B
A616B728EF7F9C9D4E4602EDEF6492A8AB391237137B5A5A8CB8AEB889F83B3C
AD005996255CA2C72A41748F6A3DBF50F819F24E7D6F5462110596371B70D71E
5ADF19D02AFC4E11F12F196F7BACD52EC4D75F07EF824B743D5814B07B9F40BC
50EE933D407C11D3338681C092FBDC27EAFF5AE053A92B95B4803C76E96BB78C
D84FC6BBB71FAA53C2CCF6EC58CB955CE9C8A6137DB701AA77144F0428044425
321BDFCA30762E9CF39B04E3DD18D7CF1E5D9C891C136B1AF82AF63B7F3BD25D
F3D663D7E027A3EC0DC670D3A53F8F9F7A242E35CC1F054DFB3F9F2CA3BB7BBA
FD7E39D36C9E359039CD693DBE128ECB081CF766695B7641C78DB12F3951CA19
DCE0F3992DCE431A289C14034202D12A5C31BBE28C4347C76E092426CAD71FE6
12020856B15A78F827CB355EAC5480546CD1645E253330B71C821381FD2EA427
4F3072B651C69EC042CC9CDC0DFE65FB557F35108402F301D2D930D4E3072F05
FEA175CB09CB67DDE0217905ED115C39A27C4CB0B059085AB388220328FDD773
89FBF6C2EA8F4349C9D45AB240F04A585DDB245EC608C41700A0F69374E49103
D3EBE7067FDB07FFD29ED9EA825E566555C2C80E06F40BE492E4D15C5FC2C6A2
FE281430A63EAA59A77F7B9D3AAE5DC0BC26E9A18AF569D04350E1A2D47A94DF
3D6F75B411B1918B1E861A777A786B15086DA1A07AE6C567B586DCB9DB80BAEA
795DB3B3C9E8214675971E65DA31AE7241E7089B0375BCD30E33CCCE53F6EDCF
4784CD74B34B93D5E33B20BF39D2C3956923C9DD71A04C7A9CF032A8B77B262F
0FC065D56EB983207F1478ABCD112D3ACD5C7A0F93D9990DD9B4CA9726CA46CD
683214576120F74D15C5882A6128766C0B807B8FF3552D1ECAC8282CA19A33F4
F107D29C989261C58EB1C04A566193E94596735C58A7F806B0A894F08D777410
A06C8A38B0D850CEB19BB013D576384E5CA3AD0E78C5B13776213B664B57FD48
914E72FC1FF49F2D2699B6EFBF030BB0ADB40A2AB1DC86A5E11C037F2BE972E3
C4CD39D29FCBF80764AD50C2E33B840D9B3E4B51D10E4291FE72F77EF1F26DC6
5FD4946FDF971F7452D7A9BA99C504797C49C87E43F8E5DA152BE827B4104D95
8756A0A36FA9CBFE15D2207635D1180B2A66864CB656E62621F3F28EF500FC5E
62C958A0B595D0FA8F21FE53A4056C3E4F0E4101B14FBE613CF0835876503F3F
E34DF9C8D9929FD30C8DB362171EE6942391782DD6D13DD5DE3030B7178042EB
948CBA6F1699DEF9BA1C5CBDAFFEF696F87CC163AC5F427BD172EC187261FB9F
259E7D066A6006DC8E668DC997D3638A76EA3AEF1416D4D0F434C895433F1729
3DC44681A945177014391CBDEF8E7F77DCADE91E6FB5554D3D5ACB89B12D483A
E830BE0C105FFBA2D9E6EA42F2E2E88E8C66D0C76B2A404F1C70C8B9F4E7F0AB
1F2B5C97A5E4557A6B9D93B0276316FDDD29E40E2A0DAB78243E1B8148A7672C
50C16C7ADA4B3A932612A5C51D15C6AEA047F350FAEB0EC7CCB3B0E65D684469
D5C2215753A9F8B2B537F0E4CE7A1EA63AEE439784E887903963A84EBD44297D
F0F79A21EA8FAEEAB5E74566D5DE11BEFF57F6D545D8D4494749107E25C31677
E08CF5693579AF6E3ECB544654C4BC1280E505FE321DDA68BEF518B116B86CA8
F86F58CEDBC969DDB7DABB4F13436F21CE3C7EF1908F96690FCCCC8C2F3ACB04
E155E4D4EA76F99070AD3FCD952A9299CE84995239FB55D0C860450F9A0A22F6
C4463B5A0F34A272A014F409BF045F5713ED9E0D157C7D61C6376307F8CF2466
54D5224828DF7C68CAE05A6D016FC1D25B77AA61D7E8F905593AF3F98D121113
1EDADD512917B75D549EF03C95157887830A38B308A349E207AB34A8632AD39E
3ABBC35CEA239050469F34F20CF5E7AB35B40206F35815EC8DD776A54859A656
1C01B2A68DE57EBD96FF6EE8910216E47BB678A89B924E564AF9061660FCF969
4F229B169C5B36EDE7B2B53780D8879E820E0C05C6C0ACFEE2A34DADF74995A9
ABDE38FC008FF68126632FB43F687E2003D74BD0C155E60CD3285632D65C2CD5
69836C94F7C577DD9C96FD55C31D468ECE32F5EFCE7DE06BA6CBB0CF0F2423C2
904D31B9F77C26D883AB39542F787525F11941B36B4402D4D6CFE31C82067241
37EC4120852256870BD805233A95CF06C6440CC7F621F4B8EDB9D846CFF35F07
F716D8102B335459008BF936ED0B100F65BB2DA82A4FCF6C40F8F9F6D398ADE2
F199E97BBEE42EA9267C069D5FB2B4CDC371D37ABF504348537294E6A07460E2
E6C8E341E646E210D829892308E5BBFA429AC89A05CD2D29851A6D924A562C37
19CB2FB7C4B1B2686B47C7A1F6F455E9DB013E03E76AF474F73F585A0289F977
27B7AD57C1A0A874A7E140ECB8122DF3AFB2D3F8F6418CB3F9299ABBA798E5F7
7B8B28ACBE3D6015853358B0F5F75D4A95594651916C61393B4819314525F534
5D901743E634FCAAB440C7385E510CDAC287E1426DCA2E17E893DF04072B5D84
B3695E39F838172B0198C15E1DDEBE091E5FCDD57D34429519EACABA5CEE0A64
1E2FB5A85650F215500F281FD6A88BBA3AFB21EB332B4230343DA8B6828CFCF0
3ADD865D0FE2D708B72D7083AF55F5B9477E6F64C0AA0CDA9EDBA7B6CB98F658
5A7DC358D21DF34AC8E716DA8AE81A992909356651A216E5F8A0E03AB89AFC29
F554D43149C2CEEF482DAE84A26708FE08BA3C7B2B6636AA65E4E7E4DF71BC18
5C3705D95BB2D63CFDFEC29D6AC22A1D3677059A1DA7472F12F3C7B0F1D774C8
76958A89D5F983640CBD07847D4D3231CD7D77BD2331A9078E094CCFF665C205
4D7C6934155F26308243BECE6F0356A8340B71C4B7D9F119F9C6EFA9FE4F372B
83B29C32E13E031760E0E469761CEDFA2FB6CC5E7E81AA4BFAE2931190270D36
854E494C1ADD61AA40404BFD6BD739FEB4B951EEF8BB478540890A72ED24B70A
451B58DB04A1F2B707077BC18F6938C2B2F371B1559D8BEB245FFAA7955250F0
8E8F507018B1B44DBB0703BEFEDB3681A2B609063302129EBCD65D0C55D2E264
F74091CDF78246C28EE58208E80B09604AB40535E4200380CBDCA96015D3822C
F62CD1D7729DBEC548D2C42A9F225184AAD4E80B6544000316C23FDB7EEA6972
691E6770B37A0E467B8708B89EA95806960DF734AFFD732DD289A3DBD48DAA0E
8508C8031D505D69DBB5F5AD46B06CB8429E2CEF1DEBCB7C618E9694E35EFBF5
EACD4FF4C0014BE2D781039285CDE9A053D6FECAD8593BDFF25FD48046DC78E9
F474FECEF9406C030BE3732916C975F583FC660BE1C446525FEB4BE079BFF644
AEB6B8B421E14F973B43B76E093C2A4F6B9F0BE52D4F1F2758EC48370EAB4E18
4CF57A24E471DE8A603B1C32EA6C208D707D3760F03B23245984BBDD588CDD10
DEAA79E7BAA7E7FFA6685B04C10628723810DAD7CE08EB085D29AC7925CE0251
3B4C84B487FC10B4C71E24BCFED96E689908E9D864BE3DDF188F2454B0E29217
8FA07A6772E96B5D7284B8EC38360E13B3A1FC467F98A7E2F4511DEB9FBAB2FE
DC321C756DC6732337440073CC4C3320653402A526E679936C6CE002C80D15DB
D5160922AAF2C11B32778159AE6E498CDC88711122AB2FDA7F0F7BBCAEE51480
2AB4764D876FCD002EBFC628F3181385AB916E2703E48117AD594831A5001D66
92D29D19C4CAD31A9169AFE4B6F1293846B117B78CADD775A3293189784AC8A2
E4E0BF71D6D07527E597DB3E2DE70D992D36A2EA89F303F86658192FA198340A
ED8771F0EDA42A4261D939335277EF229434D793B593C6FDAC1250C88230C128
B5A752FE72C876D7A41095869C9E92781D1D3A02FFCE3D9FFC5A94F0D92A7A8A
44160B83B80B2417114D624DD62033906CF97A9DD83ECE287E70E069378685B8
5A9826CB2CFA34FF25EC2870DD61C2FFDCC8F9E409DE58BA4E147100EE2CD99B
8BA62781F194B084F842D6643ACC32747D163CF35FA8D90B227E6CED8169A2D8
095A01597BB0C7F495B8495BCD3EE0223612DE7AB48480AB862E28259800585C
7D5271D7B8C5F21DEBC782E17B84140305D3E657646AB82AB220BFCCC3C372A4
E2A19FB4ED5CBCC6ABDB2E52E91875ADAE789FA048EECCC00E24643AA9A5457B
E24053096A1DCD4A4ED294847E27B311C9F0CB6AC63BBCC0E1BC5DE74D411D94
9012E5C307F7C8B4778CD3F19AC7CD4C9263294B8A2CE89A2FA7CAE9AC029908
82F3E81B9090CF23C4F691F92B4398FA2E1D6CE1F398ACBABDB5DEEFFFF4DDBB
6DE007FE240976397D06E1E409013769EC79E2F70FA65F57C51F4C969C464C1C
B1712283C42A77AE7874B97192EF5AE62DCFB82C50EC9EFD3DB2AFCF4C308C9E
0CE1B366C25A47C770E62C69C131FF3870C42B68B10C4DA25975F19B8F6AC9B8
097F47863AC853E1ECE7258756170669E0916E6B555B31670C7044FACECC830B
F9FC59AC72419F816A5CCE657A26E927CAB2BFFBF4CC1A24ABE639036354C6BF
79126C436F4C14079CD216A6C58ED7D6032F67009817A28C281C3EBE5C2C46A6
AC285446289E90942E143A26C67464E6D2CE3F0D7E23C59D2CE7BFCC99E15306
44E4601D291DA077BE63D94C9BCB476ADA7858A33B5E7B1A6A403CC958FB8400
24382EF8F084198DAFAC8058AA483FBF2D06CDD4A479D8B34ACA088A28630CD0
CEB6EFA6CD05419C55BA67189BFDF47E63B2FA3DC5068B37406B18B44AF39977
273383CE8A24B52343F7124425FC0E8649ECFB15B23D9801F0E2D5B8EAF63114
EF8932571D0F7BBFEB3015A8129777F206407B9689F5AF8B2F04E06752B822E4
ED706C6586BEDE9B4149F8BAECBABF3DD73B968D7E025311BEA11FD3D09B4505
AD3D468D9FD4101ED47F36A3678F34305FC972A11C2F3D6D120B156415A9CA10
CBF667B8F010520D14604D6B61E916B27ACCF846B0ADAC5A88597B81E3140270
F0A05D53F95A96AF6C0E46716D81039491DBC4D0E4B386E1D584D3C1FC06A419
CACC1FFBA2446805928796FEDE5D81709D1BB90615032D920BDA1CD3AAB6E524
774D439914EC1C4C8BDEA1E3A7D87373B3B94EEFE31D494A5CEC3D98CC2313FA
BEB2BEDFDF7850C368C365357C9B38C35332DFE2B00CEA0C6C61F7EF91F348A5
7E62A3027DEE4FDEF18D9C29D3E81A20A14931126905606AAE8E196D08C165CA
D3F712DFEA4CC3B42F9654D38635883AB9154E4350B30E4E91BC2D8A5A4983F3
F5D6CA53C8F7C843CADA102925625E4C3CDE0D25F64660896EEFDB81540D72C0
2247359602842E119ECF382DA195C44EE210957326E5E28B37F2545BA67EEA32
65FCD3174A60367F424E49F77F0CCBA5D5576CEB6AE5A651A0B84C0AE4B87BE0
2A36820B3DC8499FA2527787B218DEE5A155254E9AE0A974673C286180D4076D
3C0BFC32DD3D646945B77CD65C9473CD1523EA604AD6700A4930EF1E3E7332EE
0A91C80C867064B115845A0332D08A47FC445402AC3866B562DBD11D7A52FDFF
E8D75015BE9933863B7B50D8FE2F5EB859F7E972357C7FE511F1546013CB73D2
ACE6FABB7F407D6181D69FE38B9AB9054A26AE420A53415926FEFBECB334D33E
2646CFF9EACEC35BC1F6FC23F0D1A55F833A40B3E3CA3AB62D472C8310D66063
1E3A26B0BACF2CC48F23E08C658946BAEBFBF68172FEAF71C3CDEF1C80D506A9
E710B94865AFF704F82D529B6A7D03753BA53A7BAFF6FFF02D0050E6489C4957
F418895E6576FD8A849061532BCBAA2C71F002337E8D938D8706545E922AC647
AC5F3F9A874F07927DBC7C9DE03ADF4E6D0B67B44D78A09E3CA936874EAA3692
FE4040AA7AA2F0659AE16E810A73EE174DF4B72E30731CDDE7BAE3780F5BFFE2
DEBE0A4AB3983B680095425AD8B4DC162ED113F6210F71E4054568638E4FAA2F
A2002CA2E3F5DD7913665633A36D25A8E24AB5037ECFF18C13247DE3CB575BB5
91B57E5AD16304987139F6830DB78F6CE760A719D1ECD9CCC5EEA39CB4D69911
4A950D53C320F4E04A8D04EA6D37377C1B57C9162D41EF138957E8F52D8F9F47
A2125698DA21E4E273C8B2C5EACBF62DA8B00CD0CE55D53E5DD7B6ED7C3F72A4
82BCD3413DCF030438E6C2BC284C41C6F9D46AB55D6901ED57BA0CACA7B2C0FD
926098194418D5A90E2E525660FC54FF73E52943FC9049AC5BF72A96FBF6DA53
F8C7C3F641314A8293577AC51CEF8F33A3A68297ED9800395014631B94DE2FB5
0A09D00720ED4F4EB7FA28F6B5311F19E5EBA98A1A87B6AB35A8A16E27085F8D
03AA300CEA5CE08A5162FACEE6DBCCB2BF1F509C306B1730CF765130EAE9F371
A26233AA58ECF0D7A456C23C78A81A1C6ABCB45E5A9848A2485EC84D12EF0332
80763EC335D84920C033EBB5F7FFA3A31A5A1E03E1F868ADA8C70B239D36D31E
5808B877D069EDB2E2ADF1F8CFEAA005388227EB31144E2AC7B506403215A33E
829F9D2539EBB7236B120EF5502844E750853317185E95A7C2568C28289EF48A
40723E39B7EC79F2D3822C6F45A6AE069061E329A3E67F23EFA6DE495C7C9D96
6924F124640A39D21DE023EFEC3EAB42278DA9E391EA173B346DD973AC1EBB1F
A9612DD39C767B8F89EFBCD72A65F33BAFD0D3A134748872439673064D4FD1BA
5C41A32A2CD4E2D858E34CC0A0102A61086064FBD50AC9D835EE6A15923CAB0A
8F3DCEFEC752DCD7BEA22E12E9C4197D8FE18931FE2B46698CFD9496C05FE3C3
D6C3AADB664BA6DB13755321A0B72CA25B330E6B7D0291D44E807E9DC348D72F
05B1C1244304606C6ED1FAC157018F685128DA40F9C1D39E96FD5D56670D163E
43C352531D019A0C2AC31425479F67EA4899F33CC0C6FFD97CBFD459E7489EFB
9C24F3D4740A30353F00FFEB3DAA8F265AB4AEE69E7755FA610ACEF6C80D3CFA
F3A51251A59BD9220AE366C07D82C4620AA0D5381462DCBBC10B7CA95D9DFCDD
F5495BC596349A638017555F0461F610437B58F97D619C3FFD5CD411A5F5CB07
C706012877EA08481E853CC7101499CFA9A7BD7212186F1D1EF87BBFE4283FEE
7FE3A07D3EE47D6E32A9B9076094B5B72571C2DD70D0C4B089A3372BFA23FEA4
CA9BF968EE3121032F81E0DF2329CB814E449D98B39F80CAA556509BD3D12DEA
2C03AD5C787C37A4443A37410D099DB1F04895DF000CAC3A9D66DFC917A8F114
C695CFE7C63A0B1F5ABF0D001D94CC39741F117258DF2BA832668C1C7E8811B9
49FAD816D8A29DDBBFD17F1C4D5348B81965BD308E2BB84CD279AEFE012588D2
0FF55B08CA24D0E2E5D9F8A283CA8D2812A50C21158C4F1E18FF01E70EC146F9
65EF4E490F5A7558C96242BCA6C19911CA1A488A3632CBEA3070B6D1CB2DB3EE
207653E48A223149AC6AAFBC124A4DCE76CE0B2168F5E69D6A6F9E8F1328881D
650DC15D283F47ACA61192922BE0EA3A3904CF9B164C8249C600F52B8E4CDA6E
8447FCDD8EF67D1D889700C58C2D9596B95E63CDA6BC9676444E1810976A474E
C7FB977227C00DD574E59DBDAC801CCDB65B37229362BF1999B6EB812C347D0D
6805A492BB12C74B8D04F5A1196A5FEEED5AFB994C286029B586C936072B5136
958DADD3A1FE4D89EF3A1FE08E34CEAABA446B340DE1C30AADA23516331D6E9B
379DB78795CC31B01C879BB44632D8F9D8196B6AD43CB217E7A7259B2FBC5212
2E79F7113EE67BE5D5E38DED2AC8374CF1A7A7EDA12964A78A0997962F153407
62F857D645677824EB9327D1B29983E37995CADF70334FF6D7B4C5693F0BCA87
408FB56002A92419B17F95F121B2748CEFBAC41758B4122E88E5BB5715192F1B
63E992E5223EA5D9B7141486B59AC6D998F0272D21EC2569128AC6F4B65B16EC
8FFC20FCC94DC76BD4CA4CC74FEAA41D053D093CA7B84493E814B56E4F3C9FBC
E051168B43FD33AF0AACD4AE75E0F8A59208E4E96DA03A129E6E7A7BCD460B95
5170DB9F73C3BB89B9BCAA8B35C7B0A7EBE20C048FC873D916E8A6ABDE748104
291B070A7E7BCB67EF6A2F2818582165F22D383CEBD5966AFAAAD9CDEEC4F306
D37D7AD5DEC3C8C4A6A8D661A6B07BD71015D1C41B42633D35A7E1E5535CA402
BF91895EA34D2F8F076666AD30B65C11C30BEFF29B49A5BB5D944103116646E4
50C3BDAEC83D764CF3FE192874E00E4682CF76B778FEA708547D9BC7390280E3
D64DD009F55A48C44CCD03EC354621FAB3A35463DCC65475C4E1D77EE8C206BC
9EDFB082EEED8AB079C635E20CB613A5B5C4BF78895E49CCEF7A0A90C6753FF1
731911D956D7C322B4B85CAAFEB5B61164C5036C7149536012D974600D23E55C
C6234DF241732D45D63936505C506036FEB4F641732B9C4CFFAA150DD4F10BC4
B3445A93E80290D192CD8DF08584C17671813FA3D25DE5383E48CA4E6C4D2FC6
76D4BDF16C477A2DA674285683B04AAD65DAB880032CA7BB788BD4387A2383CA
180A9E6A96422158620D28F1E59D922BA5E4D5BA20DBDDBB8359030780CCEB01
4F760C3216C49C07BEDA6A233DC0ABD12472CA7ADEC6B5D27A5D3EED8C3F2289
3EAC86362504A872A0E57377FFB8AA3084F47275165513BE233D2369B4DB6FC4
216A0817342E7CA1201435807786032C8785297D81B27455FC651DB69290D40E
380E7F31DB6AB9CD1069E0F4BED8334A93FA0E7BEA28FC8B929EC8874F529E4A
F63BC5B7AFFB6BDEAACA47D045469BBBA239C5E019B928F29D309A02B365DA6E
204268BC4D362CCFD1685B03F604B930772ACE20DC41F2133D20E70D9166C205
8EDEFFC191AB9FA1C303C9F199C8D54B4660E8F107FA85DCD437E15EC80DA41C
2A6804730B762877077108CAA90BD20054D9B30611089D5CC31D4F6A7647C1E5
A3997AC78C2D6E33F2E77E1A3FAC930A2C3C2B626E921E91401013DFF0A2D18E
6F3270CD69F33148A35019F829C36A172B07A03F1475E0709CE90ED51B4F18E8
DEDB57249614C010A16E5E30F8D158586B34E401E140255D1865D0BFEC875D88
80119F37F51AB65EA27981C1A0AA3F0E28B57C57387B2B93F96BA6E717E79EF2
A9338DD3A95F46B867E14644B17A02257F3674FEEF2BED2E29CD3D7706CAF2FB
B1754E0415DD4846CED8B8AE6DE9CA26190D7A70103582209E9DB25AB115C33E
D0CD46FDECE92D319476537A752233A79FE1E56B1AC685D17572AFB60FAF8B43
F94093EC9CD5D80692F6276999529CE0D9160B97D5D634931060D7C293AE1B24
0FD9EEC10697D1C4BA1C2EC7F1F3E858CBCC66CBAE983F083D14ABF93AF6C334
7B55A06EA7ACE6D4017C31926E504E88810C9A2F0B796ADB4A57D5FEFAFF3B38
FE78BBEC6CDFE262AA5B08AC009F05EF5D1C272F64C350AFFA6A6C5DA2BC8EA6
D6ADF0AD17E601B7633948141E56CB64B0A51F98774174690DF16E9CF4887C39
0B19A9E6808241B36ED3890543802347427FAD9EE25A8C516D1A3A833AAA6D12
256F20494D61CC94C2264540350C9C418590493FB9D57754D643A8E9DBC948A6
4EE9BB2612B1FD22BE8AC64B1BA94D82FDE86020E8DBBDEE7A3855D0EE58EF88
4824D4156F2E8AD884FC8A25B61BC69B0F0598EFCDEEEDA99C750E608163DD81
895DCB8E285139D11F88FC0053B0277740F1BB8B055E2C4CBCD119AC37D82498
FDD9DB7A1179FA4D87D736EF0A0AAFA4A88039D8B657342C6452F3571A742273
26E3A2C2E6A49EE8E43651A91004794C68E8482082103B865918E24194570A8D
21A4A13544314D978E422CD7D798AEB72073F6E9FF408B3C783D071851E8411F
E48CF96BCCFAF7A173C1BFD4B934D3C3358C444FC257B44CD3C84C2A44189A2A
90426C07F6703B495289CB84EAA176025BA9473610A41FA2317A4C2D8A877C01
1FBF89A8CFE1BD96B21D6EAD9E432F761AE694105D693AE02D999C7A0E3AC55C
74B632CA4C4BBE56ACA621BB7A2850B82541A8A302E4D95578B4C5A9BA9070A3
CF7A9F0BF5B70421A92E73D1822C6B7ED7E057392B1202E4163547706EDBE449
A5169CC1883221A72A9E3DB833A1EB49A99E4A075122F6D7E0CEE458051E3BD2
9DC4CAAB4FDA9BA473FE34087DBD5DC869DAB6699DBC4556520E5D5A1C1FE60D
AA2E5C27C2624F8A7B18E0C1CFA9F510401C9DF0909145D883A5E3024AECE2FD
44C1ACC619031DAA035696F36083452A271455514AFDE70B4A830BF66E328B34
081A4E1A751B0A1E84FF8A611CEBB90580DDF706F8EE4FF627B69F30B8001349
70A4C96D73D0F89350E6C958F862DD61FF305292200B77E9CA724E6DDA1BABE3
588192CFCA22941F69BF1CC34221891860E696616D2265A7C5C62940F92A7A46
6DE35720067ABBD9E82CCD3229B5836092A7444313C171B4C95BE889F7500B39
3E531E77C5D38E2FA764893C508078342518129151F4039E69F162D67BB5DB67
595670D829A75D059D40E2810C6AB44DFD60B2BD572D01AF735E4E142964C4DB
0D4C915CD937F8BE19EF71F4ABCAD445E568AC3947553BAECD57F4EBDAA673AD
0E3ED5F7E7086C5BCD61A9AD9FE92290D6A0B3D5AE24E25393D501AA2A52D054
FD825E9053438601E832AC8A3D146E3FAEDDB9859327691908DDA9EC89E2F197
967838D929EEDC11ED8FE6FC2564ACD7935C70EBC73D31459B916012CECABF49
0A2AF66FC84E3E88DAD6E7FE9847AC94F0747C51AF4682393E9EA642C64D8234
BEB4BBDD4D8D8BC1310C7B23C0FB51E9A326314055FD37C5757261868AA0076A
88D2697B5AD4FF8B530DB56DC0B4B8AE5E90F0462F8038880E2B1C5F51E1B3A8
6090ECFF18CCAA5252E9EB0D2EE7B7CCF9D1F90BDBC1635E8FFB1298C6FDC65F
32FB2EBC0DDDFE610B8620C7F9E2676A7EF904B01950A3AF825648D42D46702D
7FC8A562E91B485997891DE6F5EDCD09993D20C046885F08F68A3A28AE31AE34
3F37D03E2F26AD76EB8D2FC1121054E9730551AA28EC084E4D8B7E2347719C87
9712686AAE6FB1A37122677ADFCDC27E30EFBA3E718E264F22B3800D5F7DD514
A7B77B3D61DCB9DC94301EA34CBBA352550A8E6336058C65A6FB521E2E161AB9
DAF77BFC22A2073298B5BD23CEBA6D7B35526797A84997E8497188FC8F67E5A4
960A10918E369E6410703D287F814A7E6D2C681AF48B2584E7DBA6C006E514AF
0C1617701C9A0A271B585DF5BD523343B9EA1278E210D30567FB5FD53D1C1593
49DEB28932D316727EA0F8268E23440A115A26A64FE348622CEFCB9E6F06F0CF
A4B53131E0AC353FEA3D6D9690B071FF95EE03C175E348A8169D782F3496532E
105787872E560030BD7BCBE4CC7F8E95409342B6D2E4922E00C3EE943A7E7F02
4B337C88BDD9798B24D61FFBB85FDC05B385EAC2FB68C544D8790143B7BD1CDE
FE147A9EFC4110701E1CA352F141B903964A17185621FB57B445CC3B9E1E67CF
5D237D25DAA71385C1A46DBF6CB6CED21DA7797C958342A02039C9EDD67D7654
25ED18243E06B97F31D3D7B5B76A2287D05C655AB9015C645FA79860C1C2C5C6
B298BA65DF88B96151C9ABCAEB26D5B57549CD223E19F7F5B818ABBAF1BF0EB3
9F4DDDDB970B76BE54F28C7394625414C4E20D63B967BE9C9E23AB6E54C9A004
0F2ED1F03AF0C294D7A2809E166F1590BB741AE73DD393D45D69FB6BB517B593
AE025E7DB76E3B3E083DD3693CFF6015408E16E0C392019E33F268CC072F36EF
123543CDF365FF184DE2E1877358910BD08EADBB9EBE4B1EBD87DBC76C547464
EDFB81F79E5D7A9AF1DD9809395C1B312BBC0F0F89FE477C2413903A61E139B0
D0A1F46ADEA24DC6B684A2ABBE3BD976D458A2D3905179698212220E924DC4B8
6318921169C7F112991FDA63181543D74A9CF19198D5EE9A7DB22D584FC7B6F9
C35C47D639FDD14CD02ACCBFEA0148283EAD2E621FD650A01D433805B32A6DB3
041565FDA3EA07E2C04226045642BE31A8B0C6DC2CAF2834CBF79C38818226FE
2A652AC7CAE0A878C9D946382E841BBF95A07528C8343292E178983EAD85A427
04FEFD6E07300BD1B42AD8D18CDF614BCF3D8E2742B88B1AD14D60862AAB2F2A
A9A9B7F03F530456D6A55E8AC83BBE06422D1C075D8455E3D5C3ADA2C3716610
DBABDE0FE46BAC8456A9F64EFF4A9E0F4E362A91FBF0EEB8207602F4AB2DA554
3DEFDC3618004C2526B70DA627B0B6320CB7B552FFB89F11EA22D02AE6333848
C966B268A0539A035AE3749991DEA439FBF139A16A55342D3D24C4FF84DD8D86
D77F26EC86CC5E3F6753451F75F064ACCD054D816B85DADE28C0C67A74F8126A
E35689EBB720A9BEAEDF855CCA6D737976FBB5E17A4D9F18FE05FE31710CF184
E6783456BFC48FC51A1185D758C54FD23318B46CDBF84EF1B037F6E8832450E4
CF339A54AD51D3F9F90AE53D170C53424E0C331CAAD340B737D7FE9BB2B0365A
177410A00072A840C5D661E5C5A04679492FEC6A122D53223351D9251943D559
22B01FBE27953875C469C270CFE867E4008EEF6ECA04DF85398D3963E96D529D
4A9B1195A3E170F5F1EDEDF38051D6A83A27A780883AA61465DFA97CD130F49D
73034EC28EABEC0408BA39BBC939845B203AD7CFAFFC408EC625E310DABD9195
6A673E464942BC3AA5BE071ADB9F483B4E3E83CFB344E00AAA7F802E0D32EF0D
F87EB74287252AAA616F074276C4840A578FD8818B199C53AF6BF8905F9256B2
76EA484B2FE589BE34AA3672C66C81B3B62777C66EDF09DCC0036BC505B14CE1
DF9FCEBF2636FB26C2C4FFA31F2DA8A5556CFBD9B8F7BD3978A763B6F500FD4C
C2CBA98587159C7800BF7A68EFBCB08DB58C55916AF27033EB70C7F98EDF6293
C4F789008648C107208134ACE22DE49297DE0E992FA0DF162B023352069E8749
C01E8481C41D9387A2917146E18E164557D617C3A4BB79ECE7DA710D09ACD838
ECD34DCFE901356CA35403C86A7787EF56EACAF956C38ADF95566E7F4F710D39
2CD103580FEDC3E27F17B5ECA6EC5823628762E804EDDD87765BA632CC289ED0
21645A22519F907D282A73F09576ECEAF1CA88F7BA1AFE2AE32E572F6642EA15
8254ABD5A8731196A5B33C6E44805E014F3A686D4B70FACC57F64AF20CCD8A05
E35B39A75B077FE9A10495DD510A61E092A987066A0215A466950C44AE2A2BD6
15F0AC3EA842C6E153CB0C1C2FAFBE2C9BD1770B9A13CB8E0B1C7825A4CDA219
0A7C4E48FBCFF9A7F9908402DEF9AACE88898DC9022ED995CF2933CD21EF5DAE
A5041C6675850497C9AB5F77B2C4564899819A11634CA70C25ACEC9A5B61EA50
20F822CB58C8E218793A5685933B050CCEC5C81D68442B040F0B22F320CA8EE7
F72E226760023AB7C12D30C7486438C4EB1ACFED75C035ECDD9681A528890694
7663CB86D6663189680C8164B04530E0BB20C6CF5DD05AB9D62E4C4AE4356CE8
09BAF5CD498329E91644DB1EAA11DB91AAA81AD20E8FCD66320FA408EF0700E3
3089DFCC13726DBB2951640D74E59891DDBB4526022E00B5448904A743358713
2E7BF195905404945D7ED18ADD64A0A7A9909CCA0C92948EEF95C118FACA7BB6
22E36E4EF950D51F269C8ADDD4BC7CB4C9ADA51ADAA643EB311F9C71D072D5E0
31AB34225D92A83374078E036FCFF098B6D25837B9E2FFCF9AB319C9F3BCA049
11B77B657C0E6ED90ED9DCB642914AD1214B8BFB43159501BAEAB263FAF92684
81A28B531B1E987FFAC89B9386ED6942A6888B1B3C0A572EA95E0C8146B860B8
E47A40077DB6A434E5A594CD71845E3CE0E1F146F40795CAEEC95753D8F90EA0
F5072B6B6174010EE3696D11291F2E3F06359FB2DF0AD9404D76B8B091875471
0147A13BA938FA06BDFE812F0A4C2FE682C4F6C7A55DD17959CA190630ACFFCD
E63ABC97681A22AE4194F920986C6CF3A993077C0B2501E3EE468A0AAD1BBEED
508E7E03D41B3D060A92B19584078696919C7503DE4E2C2F75E5044BF9B0059A
81C9BC63667FBF6A1417A1BDBE97B2663766138C4D5A13A5294A43A5FBBD791E
934D3B69F2683733DFC8C31F11933F0DADA3095C755E4F96D1E5EF764D8D52A1
0182F141700916821C1AFD492072980F225ABA2C96965DECF1E5EA2FCB834856
A2A46D834FB33534C4A099B433BA6C1A1BF13F69D8E855C8EC0A4F10AEF21DB5
46DBB6334233C58E0EEB1E5F462299F906AE165DBCA4C4497ABAA74303D3F203
C989FE4605247509EC69336998602318DE152D2F89E81D16AF3EA92B61077C98
F3043D4FAAE1BF79D5B87711E69F93B65E328BC84527AC936AB56072F0A343B7
986682C492E890228316162A20AF3D8CA197EB10B290F4FEDE8887461DF29B23
AF194E8F983AEEE17A046E6D05792E21D687B8FD41367123CFEE10E02CC61C6E
632B01E29E6F0A724352B2DF600A2268B35A13531DCF1743D7006627D6837CEB
894FC54AD1A218DE34716DD5BAC483301BBCE1D7B9AD890D6BC64614C5CF9B24
79B4E7C3B614FD54F78FF9D34A41EA24E7A2ACB665959298984C7C7C6742FCA4
CC34CD2B4F23B41EC86ADFFFE180949DCF88A517FE6F9C5FBCEAB01D17D191A1
36FAD0C22A944B806960F65367DE4AF59579E6BD0E2D9CD6EA4EA9358787D7B5
695918C2B3C3D63F254B793C28F65C6EE6FFA12DAA8CBB784199D5435FC6A7C2
B91B67AC2C87F40DF77807C6674B0F6C54ECD9BA8EAF49FEC2E68076A13977E5
B7D45A178A31355D68EE4B251255CFA1129CECF45EE9D171E2D8DBBC2ECD4DC9
E989463D4C939967DCD73AABD071D2CC8EF9A4916A93C8130B8FE1931B6FD587
A93B0519E271339B40C88D0022F2EEB58C7A889CFDDD6C38F1E4AC8495A86F83
A6717A6AF8259C2C8EC0890E54738317723F7B611848A4A735589592CC2FEB00
2357D89EE126E83EDA02492ED47AF5D01CD2C74B9404401901E8B8EDFD419D7A
455CDDA2D4C36C058852CD918048B4247A56FB04E01E2BBDDBA1C60281EF06DD
3C6D8D3AE91339DA4CBA7A19C217788DE4758411D9FDA71AAA051364BB67A9B5
F38B53D4C7D22AE121A0C01EC7CA5DC3CC3B4D68F8384DC63B7DBFC031A4DC3A
3E76E681879BA1E22DD87F01A59722701617580711B7A1B4A90A42631D28828A
1D506EAE32B0C5DFEAEEE6E22AEA67E7DA1C0274155ED9FBB3E9D47862EC635A
D73976C8B42C6EA815E15074D899222E6DC6CEDFB3F76ABEC2C318EABD13A6C0
77D3C5C7267BEFE1FB8F37AA436FF1BA7F24A004B719C5070B58645A945E6ADB
0C8D23AF098D4759D267719022D6E5A3FAC68347332D3231372221636857941F
021EB83C14744E45E8A77B2E1F3941677D7E4E1CB862B3DDB2527FECA7D0CA89
DDCF84B169DA89CAF9BB11FDF814F64370AE8B8005B16578E45AEAB0EAB33EB5
C66C4FA22E51E1CA5E7A609D5C681C2AC74561F73B75EDB377D9AD09DA8E430C
2B2684ED4748E043AD72D875F00E5AB2973167DE12BA75D9D89913DC6FAD5324
398B57BAEECF9B38A2348A6354D573D086CB48D55F73F1DE6F4A046C9465080B
DB9A161501898E4B561A240D1A5C4848B96B7C9E847C3C65EDB0332A98841567
F40BD482C0A35D135585EE86531BE8DB57219121085AB0A6AC23A60EC41767FC
F9D4113EAAB3493E464B4D6C86F05088BD361341241E07DC5A39970A55B71E01
8BB5B62BF0804B0CB1D90EE76A7C997C397666CC19A16DC405F0FAF3D640FC78
B45F38B3BC47D03B8AEF00150F41C8572FA6A2AA585ED143B18C7E05EB7984F8
F12F7EB018D6F3ABE5F5DB6C95FE1B633A8FA93E3309916725F84F2D559822A8
2C4B9B3E96974BCD736D9674AF9822FB084FF83B6020BC735837E2937A65B616
C8C382DC822AE316CB4B75C64BC94F6A340EC3281591F900BB66AA8A6DDE678A
3F5007B90B601A389C3A7FE30BDEA0A4C9DEB2A9DED0E06B5B1C05AD3986F418
7722A15A9DA3958C0F204AA7F99B2CED8D24FF68A2F18EFC84C0BC4C51261E41
C019776BFEB10701DA2BBF6910A08B13203197B25EDD687E4AEE7E175C9DE626
111702E52F19D050C3967E738E6AF91CC808397581F55876EC9F9CC37DC02088
BCC1F90B437FE0FC82CD073D3675B8538383F8DF84EE243B13DCC9D932F27078
8C2E1239B246893BC78A73D9AB21BDF06F25C2AE33C40894190319F5645FF3B5
E46612E2CCC76CABF5DA5CD14C9683638E528FA4C1B3F0404C2113D77288CF7D
BF675472B7A4F7CED10F9261BB206574DE0C73F5323F56303C7880AE98929C5A
1A74555D5AFF4364E868AEA0D5C9F51F90BA5F59BE94B1185CDA0767530A35EE
AB2A195C34522A374B256C3334620B6C724CD682DC94D43765737539B9BEC46B
7F75390FDDBE631B2AF1A3C9A18575DB60D82E600753C8B7E89B06E30DD114C1
84C15161381222297A41928DB6439E491301CD6FB528E58D62C8C52D93E6AA91
5952D4E183E153EA05E07E2F11293F510DA446CC2E25C207AB9DE7CAE4F7D72C
382906363275559A11DFDA5CACA74696B938CEAB2BD6C52AB16F845CCADEB501
4DADBF0F2F20B589616B6CE4A29A8A14C6332025765D4E59C3EB351A46E6116B
866FEE1F9BF5281384C4808BACF5B01D94BD83903F5144C3A3F5535740001A49
093E50D0E0C7F7ECCBB1DB343CAC126BAE11232271755E58766366B9AD632196
E749E5872270BC5F3D39F3ED711C1C248EC51C6C4DCA7E8892BBF6CCD4BDF967
BCB4AB15F222FE18C0F9C5CEABAD16173EA115DA533BB2FCA2267F736F77873F
7E8B71F9B3FBE5C1B262F1E15EF08EEBF3D592E1B65D16FCEF1B80171A1B1E78
28832B205464E9C7DB157F6087663DB2DB067AF7917AEF151F6CA6DD77AD297B
0ED4D84F942334E8022860EEA0F33E40682BC1DE9D61F30AF296F87657EA04AA
FF7BBE9E80EE31151EC099DCAE811EAF7A1C86E5659C857E6D5E142E0F899F54
A45AF1F0CB4872BBCF20AB30753A60B00CCB593B03088BA58A5FDE8879A5F271
20C21875C75A980BD1489053C729FE521BF68BB656D1DCBD1E4A20B90EFB8881
4282AECBFD98B000E7C9DFF453D75DDE86122C05A884542E408B5798BBE99676
D2E3D0366BCF22EDBE1085236658AB777711638D576056948AB5E9284383FC0D
324A4E1B274C62AE741DB726CA3B9EB96E6A51C18E0B52F0831CA76DABBF6DC7
DA9152319982F0B01AF4B343EB9FF13E29DC064F3CE839491C8E2C29A988F2E0
F4426A1ADDCCF3450D6628A325D09918997C829C33A2F05CC30BE054E232CA6F
55A001086C69A44964F7AAAB22E728EB605616C18EA41471D33E7DD30008818C
E7155FFC4F1A37403AC610119FA20E43BBC83BBDC2E47682210C80AF11480645
FE1E90B7E21D2EA9EFB136B7B103B0F1EC87E86D081604A0AC0F51530238E051
704662564C90139055A7C2F442701B095B5FE91E1433A56A4B8401800BD26E19
E08727E6ACCBD99C1BCFB33117BD770F6153F425344B39C559C89C8C42C66FE6
30DC78044ED54CBE30DF612BD4A7EC66E9DC3A850B182411D603CA298AE885B4
31CD64D1D11FA52691B19917C8C104C0822A1119AA2B560A1CEDF9483726D355
7B3332CAD282CBAC108B1417B1A1C9E1A3246CEAF481DCBD5675E87863BCD62A
83F19628D7EEC3552D9FF700B9A77CF03405880AA51B5D85E718E963484B0E08
E28DABD5B054E3F5CA829CDC0242F743D584656C3DD4FEE1913020065D6F1FBC
D3BED9403DDCAB8837EB69CB6F76D91D14A5118629CDD0BDB4CB458CBE3FD312
2557BB9D04FEB88B6DE54F45507C2A5DC9E6100CF7F20F1B5431C9156F8690FE
0094C1A3A4A6FEE506E4C07DCE619219B3393E6FA37A13F2933B8E8D50A6292F
4F3F07F1121B08F18D644D597D927C5B7F4067A7B48B81B729E0343AA3D48ABE
15B9DB0ECE8DC065A809366293A8A464732139348864C27B6410E7291B3ACDFC
4DC7464DDBA2328834A28FE6FB0FDB049B8CAC43C193830D6591EE5680B98E72
0BDB841CDB5CEF2AF9AD2FA431C661605FA763D8FA8C97192A72D9F9319DDC6E
9F74E4970E41326F580A1CA8FF15F1F0CD9A442867B7AB6A7D61D91219C131EE
FB1818A12AB3CC0F14F1D193AC98384CB17982E66A34FEB52538098BD30B3B2B
437DBAD0037B48670595735B13FF9A06E074C154775BD0A887B43B1FE3F352CE
489AB8C832058536A5FA72690AE69460ED2F6F0009B0E7785A5B13213822010B
221958274C9FF0EDD0A27665CB839A35EE4FB7026351D33E188F57A9A41B1C5D
241EA6626818F4553B8DE9F7ADE14B8AC37F69356984E3FBC20FA200E9F12F21
16167301E239630C3F8F8BD4F5EDBE8951083FB9DE1660C994A7684AEB23D4F5
3CA88F3C5C2B5F8E35398CC4061DC542E3732A4ED4E9EBCC44DC0DAA2167BC29
38ED5D302959B57E6429FE9DD1B5503224A5B6B6E49C82BF2670718FAEF6BFEF
F5386AA092AD4F6799900FDE20F37F0AC7D69B14CD916773627B104D40D55115
2117D43E4257A59A779978E38449B6144A89148D024C6205ADC3944E1689B851
EEBF357C368ACEF3017A96B587FA1AFC6D01B975396C9912EBFD3B66B6593049
73E423F64C6E69589FDBA65DAE27987EAEBCDDAA1AF0C103FCFF4C227EB1E2E8
D69EB4AABFCC485FDC65DBADDB1FD23BED84FD863DB12C03E1C04FB36484A1F1
FB33869A00CF9CA6B1DF2577C512BAF53607070E50F4CE4EEDB2D419ED767924
B935D56B44224D97936489B6AF5DA0CDDDDF021312F5E5C3D511F5DD05C7A3B7
8B7F423A4E31A49CAEC788072725647C4BF729485986A5C77C8756B25C0ACDF7
7868B60CCCEA6FB3169294519B9AE73EE4AA5AAE2D48923982D962AE88FB0DF6
BE37C5FC5D7276A94359CBE32D54534047D577B22E50FEF3F5C56140FE5B94CF
D7C692E7BE71B0AC2B661B7F4D7E417C0494EF1B0A1CE25DECA0791972F4F0C5
978148DF3B6BB361F70BDBBB20434B7CCC54A7E5392C15BCCDCC6D3029E87B06
52A139D6ECF2626DA8FC7600F80451CF83190F67D9E90D5E575DFEC7C9852D51
FB0EF47D54D2451C0F9BC83ABBD9D5369FCFA0ABD3729D82F67164E38A10F2C5
C11A3A9A52E031334FF2AC388F8E0167CBFBCBED6E566980FF20295D82D25EAD
7F8BAB714D30A85487D76E09300686DE434E52BB5960F2E9D013E80FEAF136C0
2E5FC6659D0B448CB9D35482720E81DA928563B7A112839A694D399FC0CAD0C7
6FBF99BCC2A07EF07C79F67851FF11839D11E7777D9E463AFBCC938D8D346C5B
2BB1B6ACBC3AA67D84CD8EEAF583FC13CD116DBD64F6FE86816D3E3C9EB0A26C
D9BFCC8413C7EF0CB1D89A46B699A493C668A999BF7DF973E6955C1B4A2F1F0D
17B4A6A415F751D935245892AB7E9426AB4C094EC1C1E268722E20EB8D63764D
77B19B196F36B6023B2309BF61C873C46B6F85968CC6CD4A4192D4B5923F0417
DD11F2DF9A218DD0496E1AF87929F8A610BA0250A16F0485EED3277FC36B38D3
D6D7C5311825F0B73AA85C481814F72AAE55D92CA3C82857759DCB0A922DAAD5
ECDD5A88383AF236FDEBCACDD65B5DAB0E52B43C3C26389C40D21011CFC4D99E
E2176F44475375C49819ED2DAE85040CC1B59A789F01F5DFD1101F267B8EE39B
DEFEED7D4FA7FBA53DA50F7888575F9116BCC38CE9E431575FB191EE15E37395
F23A680606DDBCC23EF895499EA10FB918CB4B867567DFCA75D2DA6698D7E2E6
E0E5722808C2B2AEAC8EB8D3AD1B635AA8F48AFDB7100393FFA8C650DCEA12DA
9A88A620220561D285E7833C0DC0C601E324785E531365B0CE2B272A0150E3AD
733C78EB6532CB685C2DA860CA9A63E087A1A95587C9F39078D7CA545C3CAFED
92407D1A9D07BC45DBD97FB39CE48C002502F33B403FCE7E7830E0311E7050C4
2062C1C8BA3F3FB74F036EFF81436AC5F20F4AA24E7B4CE1480E6A33A6523047
DCD2A0225D3102BECB57D1220230CE3CB3DE11F7DFF7D47C3326B4FFB3D8FA7C
8FD0CBA43CB204DE0C78DF7984E7B1D94EF010A0D99FAC94F2DD4B5739907251
01EEC55F291462DE79E43AF17AC629B2E3A1A3F7FCFC16BC7DDD9A4DDF8226B1
5F7071BFCADF55216EA2A1C741C44116DD56FCCBB96BAC553DA53B48B00BB31E
F362A3FB37AC4616FEE32C2134788A18F67801253859A1E0A140F3FF0FE89E27
F3E9E1DC0CBCBF83266358D4AC31E8D1936EA2A8EFD4C6D23F4684923497E8CC
2746E928F6A7F445457900537A420987B2CE5B994D70FC6DD1554245FB56EA10
4EC4B8309E79BEA25A3C02ADE1E66D64153845C49527BEBB5855D79B5B9AA0B3
306700778714A8D7003961ABB6B34264488199F0F967F1E44DEE66241D3BA4E2
2403433D97EF14AAFC9550BFC2FC3ADC7B83AB60784005480AAD726C02732BB7
0F31107967746D5BA0306C3DD11EF75250246A12739621B584C34C4701C35D42
6CEBE4FBE79DB756CA25AAB903E8635D07130A65A961330FD4C0007CC0A27A09
7B1E4F8B3833B071B052D586FF86D69B9424B905EB299E33C28BD1920B56B04B
1563E9A78033DEC436A3D51E9552CE5418CB51DF178AF5C744393E43300ED869
EBC6203FAC0902E47A684D7EB52CF0DA575D59C2FCA8F1434FD7C0D31B3352CF
AAED3C30CECE4F4D229E335F49B6980AEB3BA21D2AA0C4B05387347CE37B2C93
6121304F19EF894C08248C342B8BD0437C24AB16584524E5C52F69E7AD8A5682
0E6FF0E78CFE31492FE4141195118C6C8B4D184BDB2F1800B695CEF57CFBA63A
8F401CABFCCECD945A89B89C26034E865F2EC7B1016CB1C2E316148F315F1B0F
DF9BD89336E6CBC8201B78417F486CEA44B6D36A5916E1C19FA838921E875F6E
1F95ABE631B1E114C1E6A557B2510748FE86D8798413C98552435FA036B81CB5
4739F25B22FEA87CF7D9888BCF8BFD11AC59DFF36CB115F9BA678EBCEAB8216B
3E0D37CD10025CC9537C35CEBBEC2C3293AACE3C900C79E65AE35D41921A8F7A
62447395D75DD4BAA4B59D136D8C558A781F74C00BFCF744E5A4178451B63B02
D509B395F4E44C4D96A477383CF842CAA690B8DE894A9B24D41AA0D868BF5E5C
CA358F15E0624D8BF39E00517D21ECE2ABB46B4B80B4390BC3D0BFBEC5E32B6A
855EEF3BE0DCCB5A9F37B1C3EB5F07C4684055AF5C2D71336EF518EE514F2693
25BD5FEE5637B04024CDDDE94FB1196FF771DE56C4A79EA9570103F1A9208916
C644A7C8BA81F6A3F09D3030380F73EACE61F78BAEA7E0CED22239C31D9AAC0C
0C31DD0CF1C120E0377F59AB78E00E2B218BC3CC71DB34A501CE0FA946B91F3F
42C467E8593727CDE6748C1C9D0D0B397509AC9B5161F60D44734CC146FF22E6
AA2AFC1F680A987D5FEAA8AC2B914030E6ADEA03EF1BF77B031ABB101CE519A4
982F345C887B88FD0B39C57941B59108E6A1C51554E8E033E89B291640FDA36F
5401332452BD71C9CEB23FA9A049577012B2EC79C6974EA114C806959D900FB6
EEAA40E67C2C0EDF91E6709CF8107A0FAE94BE94D38B6A0D731274EB58A8B0BC
F51075C1FF7D81F694C1DCB49F96BA8A5BB0D4288D58FDEA66523DB5C705D094
6DEB563B2EA6D09101B2A934FADE597A32D617423D4D95C295C5E953EB598C79
D75CD9BAA7C2DE0F49A12B261A6FE958954ED69DC66521D205A2F303121034F8
002E28A87E7EB0E77702153FABDCE3CBFA9345ED84700435C693199B5621D374
878E637948062036DC4101BD82C5A1270BEC297B44E80FD4CFAF3FCE18E7DC63
ADF6886A4D3B8368BD6CC5F35D91F85A9FE4C7E199B72396E810AA9902BB1955
CAA2A9107A79CE636EDA22E0410933A150A980EB6A5E05B6DA235723E131DB05
FCAE191846B77D67D129EEA7DF08A43C3A273CF8D743AF5759FBA1C1AF04372D
213FDDB7138B0C161157C71D7C34127BFF38D85395E87413D773681A61C7555F
0D1D777462CE75FAA1C6CAF6C5439FEDE3E354D078ADBD52F4820F9B76D31D3A
C3CF65597EC2ECB1B916B69F606F890F854E9831D3B90A870536AD2910E90C41
6AD0798191C99BEBFBDF8932219B1A417A6F76AD7C3A7A5299422F2D75CB0166
EE5C51681E2F7C98CB8D4CCB3CC4EAAF647B94DEE5EFCB45BA7E9A67F1614AAC
F9C4FFB32265B64A41E9E15C428AACD087F8A958B1CF996018E67B27F894A11A
6C193CCB91B5F3EEB51D033FE14C54DFA367D76FF28A294B730E4A0783676347
9610D792FA4659F4FE1A486070ED8B9828D03343A896DABE61C128E371EEA04E
913315BC81E1E86203D2942A66D177344CC29689CA06DAA74A2433B737820D8F
FD92EB4216DFD64E2831ABD0593ECE989FA024F1B2618903102F138867418947
EFC0BC71059FD49533D2A9802B81CB98A24386CC7039AA25EAFC531FB0762EAF
83620463532C6AD7ED0996310AA31ACD748EAD4F9C780C89C1CD46ACDF1183E4
EF18C03C301024F04C552BE90CBF8FE3140D2F9E6DED3ACE739143D56714D286
958373ED7A23DB4FB25AD220F9CECBCFDCEDD40F8D2DE5D2970506801E438782
F1D3632A69F1C2BF203476E35341E3A478F0933EB1B956507FB534A7EDAD6169
5AE40946A3A68C912FB412BC4AF9AC26902456BC8BE4B20ECA01C4F3C8A77120
C42FD0236C2D3C59EADB30BCFFA3A71E65CD158EE9A621E4AE411F7DC0EBE44F
DF9B15210AD3325BC6FB14A5D4FD5B2AEA823D658C88C133F07D4596B0E1A7C5
FE2404D77480B9091D0941212B650E68C1EE9D611DFEF6A9FC2CC3A2A6C518E3
B7F78A3DFC647C9641FEBFD2954EFE40BD86FB868CFDD9A64EDB2011DDE1B7CE
C3DB34FADC758E7E5E556DD04C63BD43902F775E07D9D50F5501A60EA4A553F6
78D778FEC5D664607095A7AFD82289A190D827D93DD9AE29E55ADDDF03C2F4E4
3C0EE41251A0ACD0302AABC12A1BD4E0A7E4D4112195A7D4C9096CFA45E6DC58
A56C62DF5B1F3F037214163351B04EEF272B481E1636B9CA017EAFAC1CCD4338
BA688A78220FB7FB07FD785518D644661EA047E9657639A5F2C6635E34DF1A76
F36F78A241086896135731F8574F6D0FE072C63445642BB0C47F55A0C90A817D
A3CD071F57F97A279B12E758D7F55DD488AE201BDE1DE840D30854ED26E4C4E7
146F5712CB1D1117CAA66B941BA733D5C418626E1347172397413F8C15CB7DB9
7A22F518D747239A63732A656CF5499D48B8CE571DCB343BE5B7D1D5A8612564
81A9CD9574B8AA519E3CEC3D6943DF0B6ABDE63CA0EBF948A75B6B3FBC70894E
DD4B1438EC900E241136EA57DAF83DC100214EF71DD52959E26C6D7663A64E12
62163E9F7C12889229928AF8F1562A31C2DE0D6E9C5CA2A641B3E33FF01E626E
E6F74AF6C7F0D0A5F3E8E1A4A0559F76217C704250023A8957A94EE1ADDF1BA7
13D5AD5B675E28D528C630A78D69BCADFF0DA305B8038E5FE6F8E7F9A78C3B40
152D3790DCFF410E25C6F37DD28C7A2A6E1F67F878D059EC184D2B570D5DFC3A
A4CC3358B90BAD7D6D39DE99930DAAF6848E3A7223EEF90A0E3D1604C94701AC
A8D5DA8C0A89F813CE8EE9429D7FEF99D2CE24DF315F960E12048595C704BF60
B3E0A4A12296F0EE462BD2EA6B1B937399A1227804708921EA8496B2DF4BF9FC
94B57747B4D510DE0F7FA5CF42A9DC07114A61FCE6591DE16CB22549D26A0944

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 89 /productdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F3DC7D72BFCD70D2998C697029D149A6BF560D
B13E1063FA336E66B267581833A721D1F474D7361CA1D448637464F5CC53C479
FDD548EB4F3D641F461BCDA9672BDF53567466C41353BCC7AECCB18B5A8B44E8
6248022ACDBF549725A61DFCD1C4BE72B09D96FAB2AD26B0E4D5956ADCFF5D8A
D4E7311C3BC327EB9D2A0A6C307F4E200F19DC87E22A2000288954E1C5492196
55CAA0F6E2084D9D72626B129EA59BEF210BDACDE2C9F2140FF6384341E3C7B5
5AED0EF176D54F653437899B913BC50F89FC9955878ACE712DC34CCE432A7B4F
28F999C2CA26B2B9B988513E19DB077BA99AE776E482E3977A70D79638745E77
D82F642428B24D7B9FCCB16DDCC5246A7EA120B5066DD14AA83E7D8B9A3FC459
7FB4EDAE51A93D03BAFD313AE854785CA37132061A28967D34734EE96A6C8FB0
384F9FAD94D808165E5F0FACCF8EF1BEE3BD7608B9FC6A6CEC90F3875E7E0125
D03784BEC98BAC5743078759C98171BF69EC65DE65101E5E605957EAF5A2B162
1AD305B09FD1D43AF6D9E19269D45D3D821418425FC7831B3FF7FFD96FDD8D5A
CA2F87BA422F9300555259E8CE89CD3C4C28E74C4493A9BE1712F3DB98FF9362
FCFF046A7781DE2C3E46B241E6413284C751A58C7E78D10F6E5CE98FCE7FB147
78F79FC6AB197C41ADB0575F9834E739A7133A9CBD6611C21D66FC817A81A9D0
37EA575CE3CC18E257FEE209DA6BE706E5A9B6C04A2C6EA48B5BA6DE4D597949
FAD2022E3EC8E5B63C7A2ABCBF966A1993409D1655D9A6283D7C32976DF50319
8D8098E44479AC1F834528B0F6748CB7CDF6E576D2DB17C04F4F004A8EC76EB0
EDB8BA5DCE19AB735A6A091B57F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 6 /plusminus put
dup 15 /bullet put
dup 17 /equivalence put
dup 21 /greaterequal put
dup 106 /bar put
dup 112 /radical put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE105BF5F504AB332FC17E568681
F423D1125A596766BE58ADC658888DB39BA74F67CE0E26C392220832FB036E93
7587E96684BFB78BD035F54AF71B2408241AAF548F996AD440155624B3EDDC79
2102EE58E1E27EAA0675F1F13297A4CAF514CB319E58D424A820B8F489849875
F745F9434AAEA05CB8C654B98E273FB85CF1DA9590458B7AA8F69FAADC31EB42
76D60816FED8E2D8C4D2906E986D9532A1DEC88ECC49FC8309A3CB30E0E08E9A
1EF6C8612C6D29138182708C41A8D9D52A8F9346D2A4FFDD413712AE8E31E020
5C4C6CECE0F32140B873C16C52713CFE1983510E43DF72BE7A02A4163FF3616E
A7C7F7CC95F3AD86A7AEFD00AFB6BC51F5AF0D41B23C58F5AAC116BCC35A1ED6
B086AC8E4385DFB0A3E5C33FD7538238DE8E0A657450A4E069A32D2D4411E813
17C3827748620CC2C1FF972088C80C5C26FEFC2EB6068A49C9834E7AD2FA961C
2FAC0478BD92EC56412E7409C12E5CC8C8D6441159372D3E676AE01DDFA4252A
94011158BC42481A995B63CCA7D00B56351E86B08443B33E357BD886CD495F95
8CDC8347EDFC7FFFB8A2CE87A377ADBF202718704D98E938557E012FF500797B
CFF87A902C113C6B74389283B34AAC68E0DD4AEE54489CCD391E58F935DFE2EA
B3D00FB98AEF873A22D94F2490A002A67D57354489C806F1F9047FAA9504520E
096335536260B51F141CD50E4738EAEF4BBFAB010A38C0368D0869A594F1B075
B840AD79D5B325F75D8A35DED777E356ED01D5D8FD1EE5A172D0ACC82BE58D3A
6449B330112E0061D5B8F496B46E081980F77847FA3A575C15E73545602A07E7
C93CC7E7338B7FC9058CE90CD2D1272791F9B2A8F049CD6D273844AB1D5898B3
97373D320D5100AB11D33412209F0FFBA7599545516CA3CE85532390A394BFB2
93605434628027F4E2106D34CD0D4E15BCF6C257057E0E3F2EBB819AE55E11C8
BB1D6D131D6DAEDE5597BEFA223A69B9E39A5BC12C3DAE8C09896B387BA69082
F6473E2CA4FBD1E3EBB11ADC1629FD50EC8C417FAC1DB8559EF103E44E7977A4
235ACDB2D57B5357531AEB8A14C5FE4BDA032D111D30918BE4BBFCA657F6F97D
8AD32631A4561C579D342EFD8260CDB2023A2BD866AB303FFD9145ADD7B20856
6BCB4581284AA92FA1ED1D658D92835D01C896D1A26F71A5FB7D15A007FC569F
8B765B241D041BEAC5DB26DB112DA92EF31BFBB7468CF814A5E328FF392D42DC
C839AF9CB2882311EED6EDF626368C404AE0A5750C8CBFB2576162AAF8C28C52
E9995805D5367F0FCB280B0371A4773CA05C961ADAA41623F0E05D0304BB6F32
685C88B5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/UniqueID 5087382 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D76A470B0602AE45106417
0701ACD2C764DDE218B924E38B5A13CB82678372E743A8B3CC300BCBBB878978
D9847F0640A031D5E76B5AD07699C3B2FC6C1DBBF79938BA649C152FFB2B5BBA
D18B9570670B99907506494F362B124790A17D4F415D8447ECF70B67DBD46643
91AD465A1852B804CBE65206EAAA38FFD2B4180AF00DBC6291C9474BAE831466
A9837BEE55AA0E15812D87E7033BF2CEF3BE10ECF668D3B57D6EF1D4335152CB
08DA4049A65F5AE6790254B076E8575ACBF039AFCA64007FB9197EF0F53AF5AC
DC6A2F098E26F6A7D5D02C67D0EEE02C5CAB150A9012485FE400514CFF4436DF
9EE4224CDEEFAE23679624989CFCD8876056B1EE6000F86D487270743C4651C5
3B3CB3A032095A9000C7AA6EA729D3581F5D4EF0DF3B3E3EE973C17C0CCC3A9B
8B43C951652C32330EB5125DA1EB3CE7785F361042160E9ACC4568B4B4D9E538
B92E8E7329CD68786BCCA23EFDC7EE736CFACC39B42BEFA12DD5C598397A2F1D
9BFF7DEE6C148E151FEF79CD21F6704CF6E8B6CD3E7AE788737C420900EADB63
A14C12461D4E639B035CA5E22D084547BF8F03D5FF5AD068447AB63CEB7E0012
35269D30FFB338721E3AB5F5A4DF2685004482F54A6C1298BF7EAD6D93A4A946
864177ADE9205AE74A7E878005047B915C93F81B829DF8BD76B6B410DBBA57D9
14220D20EA8515A2A9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/UniqueID 5031982 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 81 /Q put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DFA3731
29ADB71596F968FAA7B02C2A451CF6BC41F06633E64FC7717128037B32ABE2D1
2962A05B46A2453BB9F280FA10A67EC1382813606BD95D2E3626DAD8A6F7825E
108DA1461AD0D85D5541825CE49B65D05302369CCC6587F9A6BA58A0399B8E58
45A4C3F0939E28CC5154BE59A387E7C0F083740C18191F515E47FDD5BAFB1ACF
90CF201E3A4AFDB7509A19756865981D6C109D9D4E301C641D45DA8F0F3F695B
404F351F8ED22F8D64C0FD4F6B67255DF8BE27D7D83589632EEF618E60559BD4
B457703BF4E4998623C743B746D0EA5D7AA4F13ABD480EDCD34370F71F9BFE33
0C32D011AFC0C82B9F5C93E475FE35EEA451EC5FDD0BB5AFB31BABA68ACF4E48
AEA4E44DD23AD5437110523A77487A03AFB6E5E9868BE0ACB7EF6488A4C772D6
7DDCD70BEF043EFFB246B66F0E152F2E3B592ED9E467BA41B1422DBFC69A0ED0
1AC4044F17B810E8E46BE9689B92D7239C57FE699CD9F0CABEEAEFA2A97D02C8
2012C31713C9B5356A9CD88C2616430A0452193C353608A67CFFAF8782C30F4F
BCD5010D94DDA30568C75286B8EDC6A67DF2B651C3A7791556B1DA71AB278851
83DBCD91C62036D3705E771E93F9232FEB35A8AC6CC6CEB58CA98954123ECF3A
49397E241F49FB97F33B3BA155E9465971C6B191B8D3ED752968F923AECB58B2
1A002AFB72148ED6C631EA37DDF577BFA71B8A651C0307D73AE60ED0238395CB
9AB4941B1C526E7233E93921336EE7DD39FE52747FFE5802597B7E6B04B22D90
8AD56974529CD78CADC41D9815A364DD46D9E3EFF76192488BD47674FBF991C1
D61861381F8C564B06866D1A232FCDFDB6073730B912C0E56A55E18E0B8D3FF6
68A2E7192DAA0D6F9E1EEA8D75D9A93A375C05DDBF7F4F7572F11F702BC27EA9
510BA2D4BAA94F5951DD7A41D2F69B4CB22412ED01BDAC0BE83554A4BEA5984F
B7B037709082441C1FA1051FD258535F8DF45FA4EAD9838923342D8B23AE0864
DE92FC7EA1F45B865FB2A6B8B8195337FCA53EE1174424C26B9F11A276D5870D
E90DBCD8AB3972CEF5BC502DB98B9C81A16D99944C34C57BAA186858CAFA75BA
7DFD613802C1A878F8DA2355A2BCA9632B90ACB9D965245EFCAD214566F683E0
A69FCC925C5D25BBD041EDA5DD5659A0310FAD98651394CCC742D048E391EBB2
D5FBCAE22D7090170BEBC15F22EFE2EE812C36C1E2B485259EA0708FAC2DED36
90C808D50EE3FB532B9F3BEA0EE8B656CA084BFE13F58D0A5B2A7C84A0897807
AB1C2EF748F1F3A624E2167F7BDD45A9C222FBC9ABD8D3F08C94DCC1F6DBAD32
6DE98A17CA6154B18B7D052CCE37672FC03CD003680E92F0D10F566B7D87C01E
D5E6E498820AADB80BF0A4DD2CB038B8C1353577D3F2080502CB772FD3DCC2A6
0622159821A54D7BF65FE9205517F1257516350D4509DF74495B3075A43E511E
1AE6486B329E785A811375E36045E8F7800BFE7C6A25B8728E4D12C037FDA5AF
2DFD3DCBFCF3B3961D1758495D71B0B6BB5244DF4DCD65A88BC0ABBDDF1FDE2D
2E1EA7346E88710D09BD073C5107D414D3FEA8135F95D54EB0DC7B8B7896E6EE
08F9CD1F7349FAC8C6364ED1F36D53B10CDF210381F6F006D659C91D1E78B4F4
9787DB8422B266E8CBC8A5CD07CACD5E0FA463C120BA209A233883345CC16C7A
DA4B3A932612C2334B9AFF723F5E6883EDCD963F478F2D9DB1F9B65E26DE2A29
76F0D6FED2491C9F1BF34268516F9F7BE711E4B743317E4C8ACD6F0A08F3802E
B71FC371AC7E93DC927FCE1ED0A1DA5033100C0FB720955711FEF781D5E949D9
8E88794D71143B730D541AB9BB183D336F4DFD036E9B434A8116FC4C735CA073
89964868CD129F37ECB26F2A2740C2299BB32DF225F6A98479A6133D427478D3
D147BDCC7F2F94C4CF6AFF2881C52141287F76562D7ABB997CB4E1526F6AFDFF
5A4A524EAAB0A394F1ABEA65C2A2907D44C82A1867BE0A5A3726384283BDB12C
AC4BBDCB7C6190AED093CD370835F398BC3AE692C310782ADEEDA0C8FB160DA1
ED1FC120CC56DA8852F126B719C6B00BB5E61696E83C37973EF55E517C6C427B
F20F09264A9594F32215F0B397A494D4EDF25F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 58 /colon put
dup 61 /equal put
dup 100 /d put
dup 109 /m put
dup 111 /o put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD47EE10B9AECC871B76227228CA161EA7B61DABB252EF91E607AC8D3F85774
DF0B1507B60BF52E4E9BC0FD04400A548D553D4A6EDB247875E0A2E013685C51
D23EE8A56AF57025AD67D929CE8BE791BE91A4C4D9F00DB8B4F16252C04F7BC2
02236296A9052306639F4672E90E3B9DDE466EAC17E200523B2AECD6C05A0A83
66D4EBC86C0DF27B789D5597FE88BCDAD2925CFF60F5A8EA618FE867857D585A
CE25A158AED63B8FE391030C518693AEC75AC0AADD0C11B0065E2ABCF51132F3
82E3718B9A9FAAF727F2D8286177EE27BAD040C66D0D2D7C092B45D9330265B5
6B5C8E29F71C9EF548BFA4BAFAB242B26455E4B7FC1882D68E408D25E6F58EC3
046AAFC52C182BDCD36034FD58E8B379C9F2BD16FA6FBB8C455E36A1BEA8F803
2AC069379392D74A6E8DD64AAC6FB5E7EE151EE99AF33B1D9E55C5C8D601EEB7
2C194E090D261E86199D6576EC00044C87B3E79C39B4CBCBF391B78C1E9D17AE
FC99092341499E3160303822C2F6FD3A62C068EA1B3895B48A51691E72B4B6A1
8942CD72877154B8ED9F821BE9EBD10080450BF07ACBCD89C45482418A511D85
1F30D092FC6BA87A6B191CDEDB96662FE0CEEECF6DF34E3FC15767582E29E0EB
7E6EF50A7F22778C83FA7869776E10408749E9B7F1C8EB4AF8DDF054323E9591
40F3D4F0D1378C7909EA891929E63BA05FA3342A0588543ED40183D63225ED45
A27648F8A0BEE17F4952CBC7EFB5381856F76E795846D84867453CBFD339B70A
ECC55221A4A1FB4AAF67C00C769FD33E18887D2437C86C10B6EE2038A38121FB
805344084FF633156B58D9CC92B082A0CCA5C2FA78600BC0711D4C87AC97CE66
627B75D489BC28179EAB6D7C2B9503E40EE48917AD13E06964813FE93A7355FE
09FA47E4AE0CF2D36FA9763D1FD97BC393AF0D9CA35E1DFD3B2E3108F93F8A48
B74BE8E06524452E15B2352322F5A358B2322C027F32607A809649AD06351E95
8B576D6B958B737BC71F9640E010592A0EAF698644CE4C48602AFEA21B8F5DB3
5CA109B2C24E96FB70EB3D5C56729FD6A4D374FD7DB3C39A780DC8383C8DC126
7B12FAA9D620113AD2AB060D813F7D6446CDE603D70C3719E8465756393BB409
A5B34EABEECB1786815397AA30D48A4E83DE576674D62046B1E5B5C27E4644C8
2A26F6C1887E2EE30B13E69A39C02A8138E86C5913E040919CD7D1EBBD4488C0
53DF3073D2A0C2AC3A40984DAC9CD8A7A770CA176445294734DD7312BFD9D5C9
BC4D705740DDDCCE6813BDFB1F38990CED5C410189DF62335F65BA39B6D0AADC
BF6AC8205DFA6F7DDC6C54FF78AB64BE89C4DF80D71B6A730618E3F5480D6CD4
CFE275DE8EE7342AA98F06B4A60A36005FBF194A541D6BB39988590121FF114A
93EC9E620F2777AB527C56EEC59DEA1EC34597CE76134DCCCD63A6181EC62B87
A07B627806062D29D19A938F797C3BD4A9228445EE6695730F9053882CF2503B
99AFBA29934ACC49E3C5FAFDBF2C331A4EEF73448F5B70BD473B8E15ECE181FA
8F4F376965822BCEC39718251AF2686488A8CD24BE6FA190749D04EDA72ABFC3
8F4B28179D31C076E191A9F3627AA2F1EDF97EEDF0D9070004995481DB8D4D64
224CF9CA727BD4C3E0E0609739A6A2CE000A008F790779A27007A0F544E8E74C
8A76DEA161B154AF0207D86FEC6ED5CD0E406C8056BB2689A724268643D2E24A
8CCDD9D8A36B30916ACBA23E60E79D0379875E0BB9D5551AA18570ADBC1B12A8
762CA9C9117E2F80CF50AAC756051EE903368C6567279B27E5EC83FF9EA48E10
AEF11A390BBFE867A3B68C518C45485197DA56CE977AFA53E1171A3604BC8A52
70F7F64520FD44759ABFEF1ABF81C8AC2B28B0273514879C4425B983D3CCEAA7
A0DB77278CC76910FA838D7B7AE58127B643DE53292C781FD29006A66BDFB0AB
7A1789606AB707AAFD523390A17F11171D3EA5F48C1A06BFCE16C29B5F57A01A
59EEC5423418EAC5C238C814A4CFF5A3C0B0E40CF2394BA898799376AB4EE696
78284459C6667D1E2858DBEC9E29059C02296AF5A93A11079F3A55E5E7FCBB49
B795840A4D8C4D1D1DC16670D1BF822D0979A2A8687FF8207C5F531ED8412EE3
73DF9594576304B38469A82C7A8E07AE344021B95316C259DD0C69B00C8A802B
0E7D133BFE40BB472EB5C08BD128BF656ACCA18BAFC5993DFDA2114475BF7CA2
B7CE098C270391350B2EC21C3CFA462D59239FDF0B2216B87FCDF6677BC72860
1AD02ECA02C539EAACE175C2E861039DAA2F88F18D9B41DF02A44C2DFFE0D004
6575D5459B73BB29EA1D3F1E4DB0B297197E246B3DADD96092A4B25802D1EE1D
D3F84D580E64A869F7BF21F0510E4202E4E4A2A3FAD95F4FB3E5F70CD0E5272A
ECF2003310C43E260A31CC1C233D76EF1974796523A20B8B41FF538F786F2F87
FB8F81E2E6E80FE16EE1DCE971E2B705C5F9444E563B02F69EADF1DDE264678E
798677B47F817C1C9CAA8FF41AC83DEEC5736E647A6BF069C6371F3570575EAB
A1EB3CF92E15439C1CA9607AC0710A5BA61D243565B878D3B013FE85226ED6F9
40D9BBD749A61C2D26219E0E59E98C8C84037698E7257A34A49DD27F7817B3F5
50F329037F498CA52A0721024607048291AEF176DE55BA9AEAF42BD39A752446
DF14B708C5E8621E3625C13A53170E5205070AA7422508CE5DA4BE9AC1FDF723
1C0CA0E568FB16E189A5764944E3495454420D6539444EB6FF6E3E64D77811C4
183BD68EE7CE055644FB5B38746292E67F828F8ACB3E3282FC1AD2C1294D2ED8
0909CC5372A3D8210B8741F2769957FE699CD9F0CABE03F9FD657417D5113DC6
84C4723D0C4290BF3D1AAC93BB05D5CFF7B4DC1AFA8FCD974200E4A4B88FCC69
40967105F6116FDAC28112D724F298B34EC3AC80019818F6CE7943575FFC3464
59DB3765C6F9982F2A30952E823DB1552C248BEC00A1FB2F62028898C3455C33
FCB13EE766DCBD81B7EDFA1128F594CA53A658BD456B872B599F8AAC24DE30C4
574D603776CA41412BA107A783112F7E2D16BEAD842D1AEE382D31D9931D186D
ECB40871D772C29C25B83CDBBCE41179374170E4ABAEA28DF9E01890D32312E4
320B103F9D8AED6B04C320AB0B818B1CEEB81DB97D6F91200E64C75FAC3AE7F0
1B16E1B149D4264E093953C0807B3E840EBDDAF1349CA5216CF182888C68F7D3
DCAAA330D445E1F36910B09A51D2FE681860C37292378F8FBC8818744CDE9722
39601426B7071FD377227DBE17F521D3B99BDCDA0C20080732CCF58CED5D9759
99BF780B778685D4985AF32F6EAA0AED95B3DBF48E3B709F65EA9E5365992991
21FDBA35C7CF39EAC6FFB4FDA3215376DECBADB76743B4ECADAF779579D38C59
9F4A45A30B15A145EBA8E529D2D0A6F66C228DE4B48B24A036A986D83C7E0D5B
71FC0BAA29F7CDB05F439F66CF5525BF53157C3DC42618D56B6AE7BFB12DAAA5
BFE0C7D63AE1815F20A162DC3CA551507555FB89DA369A564889F34DEFCFC171
092C5A16EFE84A97256FAFEE53D4BBFE91D146D1EB10B8ED83A3FB95AFAC48C7
2CB9E64794F707C688A0E1C9BFE2DBB4BDAC788F3B2FCFA17C73BE91EF4F3581
6A39E65BB7AE31CB4D689D5EF649385776A40F063A6319251B80CF7C246F33E0
3034144769A3EDD56A28795BD625C3D7B4B379B2E2E6F5B11A66D95E50EA018C
B9537A81F597CC7B7B4A92670650EA76C45F3E199C7B664DD23A03FB6DDE955B
FA9CFE7DFF795430BCFD8EA9DF592C7C0BF05342048525C327D1C3850C0C8A05
75D41B341C81054684CF5CB08331554C91A776ABE8B76CF3E0DDD1E5936493F4
91B588EFCC7077CD4F7B2A5C30376369A910B8BFDAE1C1EEEFF805377BB4342C
63ADD8C04553B01F7138E3C1981E84DAD999FAF0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E70CD6C3A70E612D90472C3FE345B5EEC8BB0B9B743486E0A3C688F3AB16BC0F
31984C055AC823DF21A5EEBA2B0723A52F65CB925BDA5C182F657BFF483CFC9E
1D0D4D02C511580BA2788C932D6C9CDF821CE5A87CD929283CE90F64203BE13F
70E16F9FECB42418BEBA175470843F85B54768299853577796D136C5C3EB9E38
3F860567CD4729AAF9B80ECC6BFEBE25392DD3720C587796C7932CD4D6AC1263
C46953DAED7A0061A540F22CB81BC3816E6267EAF272ADCD6196E6FDF82F6D92
A3F11C7EA1FEE81E07AD6ED1D2D72D9F57A11CDC27CCFF840792065DE796F5C3
BA6E6CD5AA138B168C23814295B0BCA19AAC35524B5C1B8CFA5229C6CA9C8BB7
B082707B2B06C93037B06DD775397C844678989C902067EC814CCC3E5A5BA3EC
EE5920BBAFFF7CBB603DE772DED3D1ABF4E5EDAABB95B187A4643893395C4BB1
75F1BBD94774EB71799DADD1A6BE6D49998860482B626C62849BB0B056B9A633
9D5B4AFAE1B7D87F43426B6437127406DFBCA4B2CB226B7B79D0C98F360AA384
A8CDF19D5E0F6F21CC05DA1CE1392F29895BE53E4212079FB2A579A5038A6C4D
C8807DF5F6C137D67B87CB0EB1B57A12A01938185F1DEE52D5F739D1CFDD9459
D56F70F74EE43CD621EC0332FA04C6BE2BB3D65C4B163F6474C4EFE61F9F8E88
832737186037F9E5AB161B8A23395D3A6E168B7BC85A1F6D3F7CDA424750AF82
61DD0D6D0FACC20C8DEDDE1923AAFFB416FB3029ADCFE6F26BBCBCAB0832EF07
3E3505C3EBA20AC324DEB562336583AD867FDE092F721A2EE6D3DE9636A134F6
3E238F4033FE4B56D74AD399FE6C8B585758BFE6AFFB473C9A97C6FFE58460C8
F3EEB5DA8E4B3F9DA87979FA4F2C4F6A7635B85ECFF0EDC53F9BA05CCDC30EE7
35024EC60AB475EAE8B46CA1410D0816204A12944A21069ED4EB4830E59FBBCF
FA19B1E38BD1C2DCE2D5EDC292154DADB720531BABB5B624D8D3CEB7C2BFEBDE
0EA978F8FADAC13FEAF57217EC5D2C4770A8B1388B46CCD4C8D2B5A8AEEF6559
03067A93D659C3717828BD648CCDA44DB60FBDB1EAE737051C55625AD1F9B8F9
966E65A7C94A8AFC2CD1C5811F86578F44E5BEB7F997758232B7EFE7EFBF6CD4
5C10357563DFE6082152BA57C5B898C9DC99454C4676D0084DB297CE91C7A2F9
32E78031D291D5F75C976F3D145C16F1812AB2F8E80389C29BAF30BE0A3BAF39
220CB9DCA9560EFE5799357575441A9A97AC7A5444A63D873E02672FEBF3700B
91F329B55CA7225ED5206F139F2FE51567B49D9C616F074276C4840B1A08BC84
E278B37B2C8CA5837316B000F947E21482B3358F92CFF58592457CAA201B4F2C
129B516398EF27227E32CC7D9A0E97DC12883AA34E586830418AD22E3C6462F5
A85D9D0D6DFC6A2ABD744484482C6765B88C67213AD4983B07D4A683B1930BB6
480B1A94212212FE7D9A03BF76789C3599D4D5D7EF9BCEE7DA058A9225B9D0F6
084CF3515F219117096C8E890225880C703A693C72190F39376481EC27D413B1
072FA26B83CCF84D181BFE7F1842B648B66521E358F834DBB07CCB459595F914
518383DBEAC430EA864AFADCAB0B3DBFFF506E891702121496E10B4AC47B7A18
4E9C509BF6C4D60AF97A63C8B6D5F07EC2D5E344486149846A6BD2362EBCE432
EAAEC853C6872D09A954A816E6560957C0D21AE0E1AF57E8CE25AEDF5CEA16FC
83D90F644A5831D31585BC698F45A3F7D0BD1D9A86A4061C12465C42A325FEBE
C98DD0B4EBA118F5291ED38C412E9D6488A381D2D2CEE0FC9518A77EEB9DB85C
E9670515D40EC2E140233BA897EBDEAD9986BB2188801ACAE9322213CC40CF96
EF3E05D378D5D5276B243376B86C61B77E47F7DCD3FEA2A0CA2869883C5A13D1
078B8A30A2DC8E5A3378968E4D72C8438BCA4325E0F002C25463CE92B382D915
8E1C1692E015647FEC0944754B8E7ECF7D3034E285A6DB92D12683A719532CB4
06C55A44CEBC3637B3022BDE2432F11A97C11E4E0847ADA5E19317621DAEFF40
3D99349FC4F65130A4BEF3E7AB5D34A87C46304A759B0D9171A09697E96B0753
08B73DB0EB75BA3025903469A37D3A23FA3BEFC1E400C7A0F5272D24EDF46CD5
481AFDA05F2B703E1213E6520264950793E6E3B131BDE4C8E39582B394023CC4
9148B968593B8B9D2A34AF326B84AC2CD9A4BF69B3C5C2C224B81B45305A2F0B
14632CBF042B234911505713A4FAE45EAF59ED5D93F7753FFDB772D78E9B88DE
58DBC3F37C4780B7AABD996BB59884BC15209390C163E05353BDAE6C9A0A1DD3
811D7D33BBB8A2FD94B74F6ACBC183C63FD7AD08D6149B1DA59AB2DC6C5B3DC1
FE285A5F5CA53A24CFCD68550D735ECFB0344C7E7A1D1D24C024C0826D2D5360
AE64EB559DCDA02FB2CDA686B8F3D5A12F9963BB488C4B3BD6B2DDC340312F56
E33B32F77312E7E9FD3DBA40C62E1E513A9B5FE37D90094CF11317DC8D95979C
EAA60DCCC591D5E1460DE5BC10665CAB99152B3B3A6FB7D5931C0287E2300B0D
600B98B6121497552209343F471BB4E875130499D54ED4EA5C16D5F51A402435
2D61ADB48D5E82F8716C66BAD93D92087A5617AACD5AB7800166CF80E4AC4A26
A244EBD8A6791708F0D0A8818D88A2EF2BF12453266D9D4971FC618F88407385
5853A44746D02FEBB20531FDE92248C5B2926D0CC55115953163E18F1F3D6A3A
D58199B28B0D283E81299353416AC0281E4F30F536F9F17F2D132618ABD3FB3A
ABF0504EF2B3418005534B7E8A277363F854E74EEADA8824B55B23351F656C22
B9AB9730A1C6D8CD283B10E39AE155112623CDC7A08F9B4E71B385BE50CEF188
F631AEAE4CE13EEF0A1213D363916315FC389AA410693823A0119F634C7AEDC0
CA921B273BD3C6C6B8C116F17251362E49CB222C39378BA32F967BCB97046EA3
7AF9E927893043C8B0408E2782BA944CCC6C9AC2AC479D50613F554B581C7CB7
5D7D7C13781996B80F16531F0486A6382EAD96BDF4EA0586E659356F728A7024
F96C552A62CFDFAC0A59E85B2EDEABC03C733859BD516F99EAEC04C3900C77B2
BDCE9F5EDDF95D5F80B10B9C92CE22A9359CE42CCA080683C36DE63692A68A4D
BFB6AB2314AF83EABFC149D09BC49E0BDFBAEEE0F79518C9E045BBF0978D063F
ED07ABD141852A1B249C6F1ECC22D143062A06550931FDF83BD33FF796587647
95A338E8BB81580D8E59887DC33BB806C7A1E691741C4C90FD59AB5E5E57FE4A
27B9F9FBCBD6F0900E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FC7DF309CEAA
B7C79374C6ED59B683387237758B75F5ECCDF586AA7D9B6F5DC5D57AE3AF6937
F45C869DD22CBF20D876F5D5A2FDA8A63762932F4CD50CE835A135D14563C415
9E5848B3062ADB9E374E3A43781E2FAB047819D53A6266B49E540D79100A0E59
9A49AF94B6B56D166FDCCACEA3D4D346F919FF829316E7B9879BD8E693B16645
D354E54ED6C97ED4F591623645C9958EB91958D7B43EEA506E0B4A36A18E25B5
BDCD760EEFFF9DFA2B7D6B8E4F38702AAFE923C4A9D7A370CA704DD18F8884A6
D31FF9C6C4BD03E7D068BDBD50276F8595FC6E2DC97AE7BD985281BDF4F0B44C
163A14EF447D7E09A12CFDCAE0432930CFC34EF4F8DAD5D4A5479C77743044EC
0600CAE66913D3A895B9AD47D03CBAF47C14B4B93BAD310343816BDAE9ED8FA6
4173BF894005FB893CBE5D859076B5AAE896945EEE73FBB32AF1876A91440BE1
31459CF0FB211BB5F8E3A811F2D67B799250CAF11120873098B51384403E544B
8861F1B9AAF83F3992B724FD0BC240C42123F9904785BAF8FC671C636947EE42
F1A0B83CB645BD61FC63797A999F4405E08A4737EF3B38F974D988A4D589FB10
C7BE1D5563DD47A48048AB09DE710899BD632DE3DA6F20B5957F6F748928F915
6100AF21730B8444FCE6A1716FD4154AC21CEAFBDB588772AEB23D230B1CDEED
78BB0428971CC9818FC947D8975301E6E5F8F66E8C07CC430D70EB815B198890
C950FF7906B861E51C95FDDA27861B5625C961CF064A5BE8EC10434AA9D083F8
A63723F7E5F750F0DA9C6BACA4A3EFBD1897E7F8734C7573B0B3286806EC5974
3E29682E8362A82BEA336E043FF1EB660F261482EA4A2A2647A6EB83353DC405
A46690131465B5D17B5035E3216E3E3B439CB1F1A3363D265FEC5734C81CBF1A
F913FF6520B32DB77E1DA2E2F92EB1890FE6BB060A0F1F9391058DA1F21D32BA
EE70088C9E26969675F5F3B9C4EECA7FE32B90D3209091D8931BC21C6F969288
B1C8D9390CE5F16DE76F7DCB69B1ACA5AA995EDCA2CD0D7A231F80A434F30A29
E7CA7AE699D0E5085DA46C311CBB8EDF5FEBD36C6E600300261D453EF3794BEF
63A462D28850ACB783E4227EFEF7F632A2402B20E1C20D5D14BAA0FCD33A038B
DF794449F8035E51371E4BF3E3ABC9211DDFFC557CFDC04546D999D83FB8BC87
9B09103DE0E095F7129DC64B4012AC9CE863CE8B74BB29133FBB4663DE44D9F0
3325964D8B66865C2F9D92F649B2BC583D15080EDA86B614EFF5AC56F4B05755
CC3283B0D58BCFB661C36618B587B4233E69308C9B63387A79B103E808A439B9
2D848938782002AEB2F53E9F2F1C8CAD6C49AA65BD97E299261CFFB161F29C71
7BBD069E2EA38052E009E0E1AF6C2BAB5C6D9019478EB7CBFE4FA2850F916F62
24EC42D56A998037616E891BA7C3432FD75D3407035F0FCF2A59BA345CE9277B
7B9E5131462E6B1B0967967E3210B3F6625D18BBF82FFC33D25BF60FA50F0353
8A8738A2F4A87FF41072C46853CCD71F2F807CCAAD2942004477249ADBDBDCE1
F71B1F4E5E43A23322AC5E46511511C90ED6020C380D724D49B340E6A832BE22
32CF5E8A55BDAD410D13310D332113ACDC8BE5129A3B44591A14100918F605CF
E56DA8B9A95E2F71E964DFE43A617FA7942D47411ADA0246E296E2D20F02C44D
688BA8CA7C0098265EDD8DCFAA7F25EC0DDF6B8AF6C65682DF5CBD3F1D0E9D0D
05DF4C44D23C067C14FA4BF67C733167B2CB7DA20C340ABA91FF0B3C92679836
ABA7EE3F82F7477A180FF3D6F876D5E3064BB81E641EEFC1DC2B9B2A175DF509
91D208AA0D133C8309D9212EB112537AAC2F5BB0BC9DC33B6CDC033CE8F30586
99CF1E19B8A8F7A282AD66FD8712C56A39F19975BFA73FAE8F715731AB8EAD24
ED59BDAC54D93F05357FA56F364374F89ED07153CB4E6A826FAB2A2DBA75B388
B6F5A8EF8D69FE79A7DEC31A7677D80262CEAA93B5088BC7928B624C72FBCE10
721C2BBDCE1AAF15699A1527F0BEC86456F4E5572DED479410D008B8DF64C3DA
1E2ED5DB3F6C8728912FDC9792060DE2C7AECDAEB8907987B6A16FDEAD0B2BB6
6FD096FDDCD221D3013E69F2B50F647DC07F3B55A6EBB507110C093D166925BB
3FD00CD6D3EE9030F9634E3C8C3601BE9F58C95D9CCD2DF4D416B7FDA4BBB127
44B96D368FDC0CFE8457620885721522AFB6BED2F7DCC928B6BA258045A175FE
D9128D6A6235824DDCA5D62E447E551D1193D670F151AA96F678ACEA7000324C
8BE1730FC438108EBDE8097CB91232E4464E029FA8D59C3ABA73070F8B3C4799
D6498B2F62BC7656356C716BDE9F3379CE9878306CD4905832A6D7971823F7F9
B0D028528F61F0B77F668BC7CD4399F08141D373C5C0F3F1C293BBF681F43E8C
4790E17923AC043D266B973F431065DD2EC6BC689D4B4F105C8F95567B746F14
1A0A108ED471DEAEC54ADE2497021A2B138F2DD9BA757902C2B35C13487F0BED
5FDC378F9CA52B68DE168AA57C32E41FCF507E742CE254F19EC5974E9F59D1DB
D92DDE4B0DA61C034D01A115C85D3A319AC50B5CB4CF8DD80446181DAD8C8958
436E4DB719E4FEDBA7F8016D00D5C031B86719718B184BB984BC83E97E435588
B749CDC7A246A5E3C12A28151255A1101F4AEB24234D8C67CDC8B4078DBC99F4
E035A4410FF7F533CFD5F3B5EDE7287396167F75E8BF98CB5E20FD557CE8D0EE
153F646B4A877F4C36D39DF87A1A3933176B6D2F9FA08C1580CEC2CC2E84F199
C0775EEA052A54548AC14BED07899FCCCCDB9F3270976C6B601D45B95D79DCFE
79E283EB9ACC9FE97D51ED9A8BD7DF2F64A75F034DD19269B415B112AB7B5C84
A4B20A3E00D485E34870236293C34C15682640BB07554EAEBCBF6498194C7219
C48AAC5605101FA48175FC78865FEC77AC58CA88A5B12BC54D9DFF2476D1220A
7B3209C77652ACA6D31325E5471C34D0762E630A9E4C234A9089EEBA1E93812D
E91AA129696848F9DF009ECFD0642683F2D59D10DF512150778E81DC7A7149AF
546D69B51934E78BC4474F3A40624D76DE85B5D1BD7994A0FCC2B0238076852C
4B478682CB6E7E6486F78CA49D273F2706314E8DFA078AB445E3E022A4CD1DF2
EFBC678BE8282A3A3743F168DFE5058023055CD60B439D7F94C0FB304F9242D5
CE2A3ED37719230558B081DE94FD8AFA989EB8BA0C33DED284D9292DC4E30E73
D09D0229F39AE08202CD67A9DC008FCD6C48E6758838769B61912A400B953DA6
4AAD7303F6918A3CEE4C4D8654ACD1D86285C1DBBA6E4860125DEDFB5F84932C
A57B0DC656A330FAC0B074D118F052F6ECE40277B0698021D3254848E8527630
D9509827D254108EAA7D2F49D7601A57085E5AD4C8278F0385DA62ACDF1DE934
8FBDC32A12A69EE3ACC9258CA206AB5A10743AADCF4829603BBDCC2944DFE183
EEF39AED664E710AC92AE915608F20FAADF47D149B38A0D7E4E4342CFDD22C78
0278D973C314FEFE5493FBEA5FB1D26743416B6D20BA817AB490844068826FAB
1D8A48A3708F6B3AA1DE3502DDFE980D3BB2B2CB9369704CE85F5ED2FA84096D
5D15D99CCDDE9963587B7457D56024D95645ADE0D95DEA74838F6FAED25A690F
FA7A7412A619E4C35AF7BF31F66314F11973816C9D25F988B97A025C9805CEB4
6BE117B609F9F27608073B580ECB45053F0F2A618B6EF08D0A83C7F7FC09358F
D5F673DCC906C7E0FA7711ABE0AF0D0486B75FE82E88EAA03F65077776C74704
7E3CA48CCD5790DBCCD67F292584BA2A471906D47C257DF7185501100FA347EF
CC22DA5BDDB8CF7ACB4B2648DEBC5CCAD3452A7FE5A527D3A9DDC1C8E5A1260E
0A22C03999939FFC6CC50503BB871565797EC537E266388D0AE4644AEDA86E3F
BFC275FD432A8A3B1ED1E34214E9BF0DD2185ECC3E598C88C8D611168403F652
466062D88DDEAEF972E7B7FD99889CB9DCCD3FC71EAF6055EEC8313272070103
BD0C1A0CC262235138EF39E33513EB6E72F1C7FCFA2AC432ED575511FDBE6AFF
76C8CB2B9EF7A89A36FD278695F6F2FB9A6F974915B83B74396A9E0C75F5F4AF
235A76B190B7C820DD8F5FD93901027E6F9C6592605A206046CDABD9D54EA413
DE4C9F1DD0610D98BA6661C0ADF2CE498B72C709FA1C06F452E6D55DC081E8B5
8F2F29E19F7D715AD567F556BF496149D10193B73D2C7D6C71A1FBC04F6E9858
1B5D753BDA73D9DB197ED12D51B0342A0216A769BB5F0967CA8B3F2A3D6CCE7D
A625F13D9C504668753AA079E9B24F0C3B453AB9E49D23E9FD278CD5F2E4121D
93B02168690FCE54DCD7DE50FDC07151723D41977457A5484F17687D2F390039
9345F84F59AAAE1F396EDAF9CF4421803E88923DD153881F254788CB73E4B343
AD3CF1260F959E583181140C165F88F86546F8A0DCF9F836D147A315AFE6BD1C
0C1DD432FB5237700D613BC6EA35C378E526710CB8A802826EAF267A3F75C5C4
3AD56FAD7828E5E203F3A53CE8C290F2DF1FCBE6EC3A9218AEA47859060B70EA
0A702E60A02D203ED9613520E40BBE6D78D8F64889C8461FBF52A42344CC6891
C39D91B47BDAB6B77784BD359E0CD16385C4A6F83D30834890AFFD8FE6505907
23C600FD86953300310988BDCACF8B600CA3CD7FF641659C3173400C5C53FD2A
3596F4F10BD3AA37C25CB59CD146326EFEB1052A80ACED676037E1A70BB9312B
5519D65EEB808364E40458C336B7987EB5B47A36E3A86183FAAAA649922D6D9E
570D265DE6182B00FBB0A75AC7D17C3CF29FD17A9CB1D0192C7D2330D65F128C
47B2481B73BD918ABA3BC1CFEED06CDE91DCFC11A6DABF34AC911826F482DFCC
07922C91F5C99F9CC06418549D42176DEA4E100EA38EECAB32A13A3DC4FAE0E3
4E485C31FB2952DAD2A61170516AC9CB4E4BC1D7C2248A8F6E5A7695FE9B0A14
BD7BFBF822994D21D9B4EAEAF81C3AE8C464A89F33E4D709003634A6C3F19DA9
2D2CBB229D225F1D15AD5AF11C39B61C9A222C6861BDBCCBF5B17AA9F218A80D
732FA2B4684CF91C45816B9AC1146B1BB7AAA74FF92F4273B363FC4CAC068A62
E2B9D20DFDD5A0B1D64C656EEA8A41B742779264257FFA0AFA05C2842C534A41
1593D10A734DF9EA9F50CF9A75519684785B73039B66EA4D2CAFA65B5B612FCC
6F434D3202BA66D3F05F8128A99ACC3077011371A915FB663A04001D43A504AB
C776456B69DDCA3A344316EA2278A65E36711CE80A4360D829E3905EF9270113
626E0C22A301504A6C3B746E7F9A862C93438EF1C13D91A39EA1E3B673DC2BF7
9331E978B15B5319DC1B46CA18FAEC2921BAFBD8687C4F810F4EFBAAF7E6E5A0
49606EFA4CBB077034D588198BBB5D13982D6EB24D51DF7CCC5B2F312D9B93A6
382CFA066C7FE21B350011437A400A18272D00506E8E85479422F8B05CF4C752
6E3DA8E9FD9A8AE3801EC41F2D0E335D41F59317F44A118383B0C9AACE9C6768
CD45742FFBA113F9A6261FA58AFBC1198BDEFE566CED18E2F9EAC0FA5DE15FAB
74728567A10D7446001D789A5587B1A3B21EECE4AC625BB9B01ED80B769CEEC8
4770AAC912FDA68DAF5C05596EE1AA189671CE354E2EA48DCD4DDC4B9471F904
4C55D8889F03E8C651416569683644F8001E50C73F814F53B9901E9645E53E53
B9A042CBD9DE2B19F5F89F17A00CB10996909C4BFFCAF261538F608C93ADF044
C39BD2A560B752BCB7A575129688E11519C333540AC42F545EA9394332C6915A
C23D5090E748679849A829F4171A1515A6C5DB927B0C82B3C81DCA45DDF8591C
3B4904EC5B76A47DA0CA1930D18B1F5F58F4610AF210FB438A5ABF80A50BB8D0
523AD8F03598EC800EFCD6E451C4B50E839B5D76C73C14B75B31026B49433392
C8930BD9661B23C2EC0E0BC71A593C57BF673D0276707BF3756FC97D20E7034E
1FD6D05454C42DE6FFF8AC8683DD62ED727126F236C790583C4EAEB6E685240E
829C07F1B008DA0116634DF877308C75AA555FB602D83CD2DC870E6B4F6E08A9
FE636B9C587075C813DC72D7DDD34F3CFE2BF9A9D1B9383AB4333598622151C4
7A07B59C7464A7810CB91EB9ED9DAE1E96D50164DE96CC570C238E9A4750A33D
E74E97258AFBBE2D5FF2E6F9CE8C6BAB2FDBE4880B771FA3A39DF91CF256A58E
804EAD7E85BC50C4F77085DC80EAAB78AA89B3899341850F846F03D86DF4B286
9AC0A2C2AB6CB214509F1CFF42FE6B4CF39566C84CF5342B479A465137BD8208
32EE94D79A8D01C094A1FFE1162F4B61C257CED6EAB227200220E959A7856107
97BDAFFE1E626FCD53EB2EB03400B20F87F8716D4F583F56C127E3666DF8476D
5A8A6CC0A5B1420DD7D02032DCD75308954C0E694A20B6E17926BA3281591B8C
680B06372211F15B3ED73705851BBD2AD9D78C634D4366D9ECB58F8095D33B83
96AE9B26342CC1D2A280F45DC9804127073B22A80BE2CEE4C6DA82938A305C85
7AF3E6C7AC7ADB2BA6B75F4F038FF6AE864A2170296559FEFDDC835D19400A73
6213F912AB503B73F1041C7BA9000F9BE22D89940BD35FDE86F303DC549BAD62
4D9A1762FE72868E6E7812E0054D66C9C7EF2025A1CF25DDA5B1834B119DD448
53C856561818BCAE91BA0777192E6B1ADDBD6BAF77CACCFF22653EDDC79BFA96
62083770E7A7EDF6D500E92372AF49A96A30F2B385D51E598AE0A2017CD35311
5038217B35C540D1827922BF5BB093346BEC8779406E5F1F232517AAF79C3E89
9ACFAEAC633ECE2CEEF253A60B2B187AAF62D3F1F3AB4899CD0B44378CD3315E
03D8CD8A67B21D7B3FFE73CF99C715CD6998E813BAF9B05BD6E20FBEFC3ADB58
7959D05F2C845AD1727101FD55ABC3BCD9B3E9909285BBE76BC0AD415C788877
41C0A255A16D4F09622745D957D94B3EC18664FE60995BFC8F1150BFA1A88707
D2466FA81EC039AF5DA58C53B1462C83897BFCCD094D8B8D84CC3DCE518DD210
DB1DD9C2CB2C07E7B117E7D3C26BEE1B98ADC3578B04646F2A1460F9F6621CB8
857422BED00531C59B73E840B59565D120D404FC4D66411D7B73949D2CB14598
9327DEBBA30CCDC22E82D80CB280E24FDB8B9EFE3EBA55E37A9E6A8CD55BE244
9570AB19A49362DE8D4B01549F8BD7AD07951E572386292BDE598B49FC61FAE3
C097F8A2F02297914B062822FAFC441FDD5E0891DC4AD38353CBC887BEF3989D
804AFAD3B8761211BD1752A4860521922653A7D72936A60E378292CFB3E454E3
EF913F89FE8C0753F56B621F735D9CC59167FE6FAC5920AA79BB46882C4E277F
FD91863C2B16D33548F4F4AC18875EEB8F829426DFA9ED12F08B9147A3D37B49
B0EAA0E22EFA3CA9334C47A1FB0CE9EF3972A6F66164901FD90790F34809361D
E0D529C7FC44F031605F0964B2B69181A81A140E098A127C73EEF13C8D600630
45B175021256F3966F8C6973E4254B3E605D8FCAB04E8199ACE69C5425B0C349
0B489EAE7998EAB74D6871D06F4B4A19BC80F638158D5F2177B7C75264B68D56
F6E0D0B9DA5A868CD9C0254286D5C8D1A7C257A865295A80BC736A7A3EBEECA4
D33D8B66966984C65E12F2561D2EF3A3B11BB96A3319CDD3D3F40D93B111FF4E
C28BEFCCC5539C4E18A39A69DF5F8620FB8A4E19F16955DCC6BB2CBA8CADA0C3
4EA3C16F5A30A3CC1846C3AD33795FE12420BEB2EBB6BB5B90B119FF92F0AE37
74148231CDE40AF4466313AEDB31E178AE6F97F92FDA1E4284D65A2EE1AAEFB8
E027589BE2F19BF6DD845F8AEEA8494F7BD45B893C45362D3A7BC718B343821A
D274250BD1AF4E347E31CE195C937FF11D3E0F2B45DFA048BAA83BCA6DD2A5FE
CBE5A1590A6EA8A9279BF07BFDBCD745E07B8073FA5F7B6DB1F8954642841F8C
06B3A12F84CB9698D82F87CD10F7F8B71DB5A7587BD185801667C66FEE9B6E18
69F7DEB4E5C3280742D2FFA4CCFC3643A19B3A6DCAE1B9B6074341250FD7374D
EFA67D8BE7587A80C2AD7FB83B1CCEAF43758D9EDE022593EE138DE1C45A817B
3FE39B1A8FA0F3F3A77D3BA084AB7AD67A9535FDD857AD223B62CA98B919705F
AC57C62ECEF68A2973F45A6B428C13AAF1AD1906A8C003945EDFAAD1C0DB1A20
F4FFE7BE3EB51102DAEAF608C0CCBAB6836D9B7D57E7640315A8746A6B063925
69E082CB13FC9941575F45F6BE7AD3D991299B4DC4679D2F56AFB37CA6C24279
00B145FDF648BBE8B79D1D976EEEAEDBA859BD0E75F70B0F06F5C22F4055F278
F5E10C597904F8A12F81D6145E33520F9D51592A5D3BD320E14BBA53D2FD8BE2
B0ABD5B312A1277110155C17DDD676314B6A69FEE8446E378D6300D9788A4D93
7208BED4B704552C6910387F6526EE403917EABD7CD6FBB41FF7B8DE174F9F07
A5D43B48D40D3DE3C893CD829C3BF6B74ECD32E984CF39CC12196A1E09340F8A
6154CC00A81A4398162486BD24A600EFAAD1B2AD9B5D308FFCFEC324180B9A44
F918597782A8882D05EF0890CE18F0B27A8C4E91B5DC226F9A76A9A3B4EC7EE8
38E7F1E011D88A866F4657047FD6BB1BC8A4EC5F739FD75577BB15AB680212C0
D09C8B46AFF1451DEEEEDE455CB96A6601B8CA03E5695F02EB79FE59E6EE0173
46DC39E98CA8C2F8C9C89A10043630C0378E0BFEF85B19CBEAB73B281AC0235A
75F829C30151CA9A4BB13EECD9C288739EAFBBB3CC59D3FBE6A84F1F9521B6E0
5D0A0B2E0FCA5EF595DE7334E31E8BAEF4799FF68EDBBA8148EA7FE2852E320B
45EAA8E7D305ACCE79E0A80729DA7693BF3F860440D4C0196027C17B8EE71D65
4F0E33C5E5A8054618E8D551DD326E58FE258D0E268FFFDAE1393586EFD621A5
CC5274F967A17ED5875C59A2FC08256ED1625650EDDABC5FCFF7B9589EF18E1A
4A35F047300D6074771B12E56F662CE8868C1CF7905F6286FA59341E68A60549
1FAC9D861C5D5F0BC58BC526CBED223A031BB54AC9628A6FF8AFD9374011AFBE
3B5417B07D10B751B4D088D955A747801D8EAFF2CB0EA7EF01BBE4523C5FD5AB
F3D875AC7738923689F96FA3FA86AA4C503C7CA2D05701B5FC7E2C68FC0637C6
61E3ECCBB47543C20271E2233F7B73BE713A1AAFA21DFC19A784F7C189C8EAA6
59E2FAEF7EFCD0D7ED0575082F7BBA62D978020F67B8AF0C407C65E9F2FA31E9
C9379F2B3440AEB83539438BB83563DE147F96B914B7DB80614C0243F3B3C291
206608A791091424011CBF25EBE3882B835172084EDA0B96B3F3222EA8E3ECBA
619FA6C38D9D27307FAC14429AB8FA9A5FA22DAF3580E315F57C2C8D2492246B
DD86DB936D479EC880DBA60D34799EB0CBF974F84DA510FC82C8DA6CA3CA9957
1BD58F313EBD16469AB8F2B0A5FA8D5B171B8A6D6D9364127BC951DB04055489
DBA72C24342D68B5C88E537B913FB67F661E0251CD156190FC3B3561C0C632FC
2A32C6C1734124CA3176AB14F48826ED2E56C67571D8F3DE12FAA296FFA024D0
8E5035473CFDA53A98C951278AC21E80F92528EBB5E1D86F18AF20AAB3741FA0
DCF47D69102FB29ECAAD60C12F5A152863097FE8153ABA67BC49E61D8C79F8DA
266F89F3A0DC02BC6DA849100D44D5DBC2D5CC2D796BA6CA1B93FA2783C18A70
81BB584FA3E2472A464EC20BB3F5FF35BBB4FAFF9436A7F0E0D4E324F751D90A
AC7CEC8EEDAA8D41F2612CC8FB2AEED96289D1C295FFF3DA9644FF0D29416149
36BCF433D4F9471452999FC337744781995E82918639186A928EF12AF91AABF9
D3D0CBFD6FA67EA6CCD740525D51D713CC64B0D2B23983C0D8A7C9DDC28ED622
1612A20A3068D840286A746598904F052A50EF84D1C46CFE09C77254D06A967A
25CAA524C8B374AACE6AEAC8CB4182A887EF4B2898A0445514804C0D1084597F
1E5486FD79F660C4DD1A32C3B22A203F8C74C0035ADA5B3F88116D2945C3EA1F
BB41C3B909A78BCF770DD6D4D6299D747D5E50D44739930826DCB6C688958030
D0045F7E46E475F1C93D9C054C95B27305BE89ACF581099D13B81C3904DF7653
BC9356BAC65F72F77154554B19831B2AE54F8A90DC21A4E33DF29F1F58466146
85B523515EC158884E26A6EE6CFA5EEA25F52746EAA30066C08F2E907B832201
F429DD5A2EFDC3EA1750E0057A8D4EE1C5DB70F4B17B4DE35C678F54658900BB
328F8CF9DC677D2EB637A72100B74BE22A80B3B71F20E50B6D68148DE8830830
C374D6FD6BC149DE1D1C14DD1792AEC6465F89F9EBDD06968A80A8CF7BBB5FEB
2C4B5E930A6CE175920C2EC7B3815B58F2A48BC4D4A75C90361AE04D572FB04D
48E69939FDF48DF49CBE4C7ACAB0D32C4A7B17865D9B7D0FC9DAFFF25889365D
6071B4A4BCC68833C62089D3535C22C001CAE1DC020E57798D6860C2EB7813CD
05C6D5EE5FD2FA715D88A2586DD18531410989B6F51BB7DDD2AC5E0C3B0637D4
B3683E1192D8CC1979414B141B0B14ACEA0C0DDCAED669667EA1FA664771A58D
2FD3034EF423860093D81FFA11EFC865944AF17127D5844580135B616405F427
58BDD2C8CC29DFC7F9D1A7A659C822B7A93C27F3D482CECFB6EF2B84A99637AF
4730B348FFE40887C4D1357C69AFE24A19C50F56F5924CB1A96482C5BADB4B22
61F86791B443AD9D01A3827CD0583D9F91D8744ED7D04A96240A6E17F35FD7A7
65BC8048C20DCB99FD2BAE6853877991059EA4322F23072C5A99A72019D29CB8
45F00A177EAD188847E1DE4945FD6631EE73EAF3BE24749C77B73FFBF6CB06BF
E310A7855891FE38AF4673CC7172645BFA492CDE638EBFE380B54AA85ADF6C91
08935595DA856256A535618749EFFD7C40DE0224F61857D6D1EDF135A35A8E10
E17E194E8CDACF7FA1C6FF8AF6320D750231B552FB90F126F7B8E3D15DF85ACA
A6ED5A6BB2612A06E9DA3C7E35D6786276BD5C9CC6EC08DB9DEC5670442C353B
FF3858947F6F9BF7EA521607C9807ABD8B5F2A41D9D60E8E244CCCD4895BB5B6
E1C1BAFF90F1E16665998AB7612444940BAFB685F4F02D20814AD6BBE3C4364B
D1C64F9C1F12C0A91C6B43873FF17704C4D3685D23C0D00BC18FBF9FD04AFC33
42DA82BF175F7D0D2CFD33813965D88B4AF512A9A3595E02E913862F1FFD1ED2
77638A3C10008C3CC7B0075923432E40B02E142E093B0D1265886CAA5F0136DE
BDD9D4265B8B8BF3A39487DB92A371890B36BD310D1A184C084913958D22575E
85F99B5FB75F60ADD7C8BCCD30CF4503A25C97F1D066C4FA34894369B2DF1E3A
AF5C41EBE355607C42AE4A6EDEC4FFD1C162FBC975102A5906B426D18661BEFA
2DD0184FD74DDFA29EF38C14A7D31F074565A14EB60996DCABC96B7D8E377DDB
6A4594A569CB008CA30E89778199B2E7DE90B816AC700557576242C3771C9529
F24EB9BCB7C3CCB321E0DBB1291EABC3419C009A5A37506BC272CBBE1FCEDAA2
99201D951426BA4EB4992B5A523877A7A74CC257C16DE3AC1F8D85467B5146B7
2FD47EC0C3BF5C4472E4352768B44D547BF9351699AF6A67D26ABECDE60A2D2D
10883DBB1CC9F5BE25FCF399302B8821B124B7B147E2A3539F1DD25B1C9752B8
E33FE1B3571AAAED118CE796554B2775595D4F7272706DC39F093536B1149D44
C84A2FFD5C45A9CBCC9086AB4D09E359B41CF74AED5B75C01085E9F817EC9C4A
0C28E33ED8B155CED74370BB5770529AD414663042FC09D14C99A69FCCAE3D3B
AA6C3EFEBAACF6B40F453F5F150324F5348BEEBAF5BE5B3848DC05D38D1F7760
7378E3C4AF5B2A59F36883269056908BB3DAD67D987B468C11A86C1A517F86D2
C6190AFE9B31BC892A226A1B042321505CB0CEE9FB7E025E2D00DFBA1D8FDAD1
321B88807B579BB6A0C8F69CD919E311B6ADE903B7967460AD65654709589BAD
7E23898C781A33C18EE27725F522BE9AE47BAF81C8F356470C31B4F54AA5E59A
519E655EA1F11B8FE226AE94AEDA6C5911D9A0E6336E370BB449E80C67BA35C6
FAFBFD9818C21E96827534175EA4D05FEA4DECE4EA88FDA3670AA71ED77DFFD3
BAB2360BE86BDDA1E3D2DE9C549844667E28F6FF56261B6FB7FA4D9C0408DEC3
E57CF0E7EEB0C17900842424E029E4F229BB6AC3949FF9CB12318E20B680A50E
700B9A05B67DDA6F9EE669A054D98A2512F90B83157F57E0509775857701091D
E33D6A472DCD3084B026E49BB0BC85A600422008B21D9B6D5A3669931BEFCC71
6F622A9652257FC651D72AC7474753A387E4FF6B9907F28808DC922FBD21E506
D03E46E357EABF76D41513A3D393374B1C7F416D8415818D4AA1FBAF363B8998
27711651101B499AC20741F3FCB1C967F9E6D970F3267FA1B2F23FAF2766D491
7DCC673FAFA4504EEC448C29A8F93B36FA63BA313944DF665DD42FA9522F630C
A899A5D78A360E0959622415FB515BF63CB289D701A43491C4C0838B8D797205
E96BAC6D68B6F7CC89EAAF585B97EE0A1885CA97B6B40E6B8CFDA711101DCE3F
5B17D645EDBC0B373BF97CDA78F6CC47B40BF4ADAD86EF5BEE825C3F850B6EE4
05BD39843032D0327FDD1B8EBE6504EA7C1337060BF4040640F8AFBEED0525C1
16ACE245596D4CC442AB836DAC480531E4BB70E64EEDEF0CA24784A1DB7F945D
A3C9310C902145583D810F0E024464F875A3FA9F1684F095F8B4E355EAB2872E
31DA8DD0DFDF35008668D8257FDAEA0944B123D90B7D89082D383212838E3FFE
BD5FBB076BD9B804AA36E4862600E511399D22F773556780188DBB5519770A04
055B6FCE3025B3EFDB81F6555F09A25CB68EBEEAA66B4C6445370A3F1E0AE7F7
4F1BB33955864E470F4A003D3A0B25C5CE55AB4DF88D6DB44330DCF88F599BB8
B30EC3855E96425AA5F10CA1EF4608FE644DA9ECBD2367F1EB94DB2F0F49AFBC
11E92052F10FD3856029CEB6229DE884C96BB923B1EC8208BD7DCEAB0FC22936
2B8784D1C05E802BB138DB3626C73A540D2F4F23F6F7ECFDCA861F0DE79E3532
F81D774AD4D86F2122C52BBFB43707A11D6366AF685F88D99F32705FFB5C3190
91904D305A27D97FCB8387218CD94EF127847A48B648FD0B62B6947A6F436B82
3B1A2FD914DDADEFB5C5CA3A43E343EE5690969E28179AE774047799C5B210BA
AAF8270E01B56645F056E2350677895DC6E36A35434AE94BF1E101FE6DC72354
17CE691F66F158A641AE09E9BF68A9152B4881A7D4318FE810087D82BBEB0F22
EAFF762189E8EAEB6B2D9EB74230EA043F184BC20D38FCA2E503C87CD3DB682B
59B07F205201AF82F41CCB2160CCCFFB4B57406E69268474AEF527896BF2AD47
6C89C12AC6647860B4D24AC8A78B0C2DEF08A6B185F2CD50DA34E856D33B1F1E
967AD8C1A743E49286EFF1896017B39C006EF6170811915F1A99CE938BA58FEF
4A85F80CDFA73E42121697F8578448DDBAF15C3E205911FD43DC64D07A4B7FF8
3C000D3705CD7F4B63DD5B8993699047346A11221AE5D90184EEC7D4E3B056C1
50F10D0B14675F3ABF36E5918B83E46908539E637BBCD3C706FFFA5A4BC8C23B
9209AD39FC9D9C1036CB860A02CD608BF26221CF6F517800F5B2BC70D3998A68
E2326AEC1AA92E92FA7A9A5EDD1B984C38C5CE57B1104C85F28A97ABC9ED449E
6AAE79500C420DE587BBB3AB506CE1D35A660B535E6D9EC0F2E0AA027805470C
F8FD960346506021395C7953A56EC73990AE575E06902694466B73608413B836
93DDA76844037D3FEF95304DF820B1264B9E2109A7DEADA17285A073A8183732
ECAC271B8692AC4EFEEB8391CE131A151A437C888E081162033816D6BB0CB3B1
0B5674EE8AF74E01C02AEA0270362AB2F217D26713EDE67228347126EACD3772
1FF0DC27B64B39653CCADD08A71FE7C4AD093EDAD1BF9EF1B03238B8D2545BC8
1EC1BAAB1178FC7C6F00BF359E54643A97716FD184800B265CBF607ABBCE659C
4C361C90C0D1773DB9936FEB8BB35396F569103B63B48D3B2D02669A89448532
9FEC47090B89ECE2389DEB159BEBB3292415E65D8368F01787273CD87F827CD8
E6138A72CE362759269544E2A843E6BE4B9B5EC798E16FD160D76199ECCFC1EC
C3A882B28EA843E0D6AEEA0D38423DC3B7B2FBA0E00861E78C2925767507B046
9C12335622EF98AB9A42FE918E3F04592569E22F9F36ADB959FD2A74BF2FF069
AA914AECB5DF30FF6C07E8C619EC4B4671CB23339A179FB5F9386ED6F7E49B1A
A2D42DE17DAE5D908D57ED2F9A3E9C03B274B29B5065EDBB7541D0EAB7E665EA
E30F978125D0B11F9BCF2F4870C291E2E42FE0CE498D7793ECE08CEC17C05D89
82637B8F141C4E674DD41382C0B00806C8FE8DCD943D07BFA68650EAEA8D9076
C716F482E1EA8320C0D03FCA4950F6EDCF2412B0A938854616A99FB30863D16B
778A746CAF1D7B6428D755E3CBE2C65525E3972E42D484540D7987B312955022
863B72E34D62926AC164E6698695DEB86AB350C472625C2F1B76559ACEE0F5D7
B217E4336AFE2F0A9676AEB1134A65B26FB037763CF59FE25A329C638D63354D
C8A52582F62F318CC1D210C841E6DFDBA8EBE3296E5F8E092C847A7ED6488978
B9896E5997E5577E28C5D8A66DBE17AEB3BAE3C3BCBA320711CAC895798C5B92
B6C770FF4F390331D7372DD03AC22B2FCA988D5BC09273B2C2E4E4D6D9A728BD
38405D9A8CF3C550E82BE4A97C2D481B1670338E48589CF8D8411CB406CFB1E0
BB2BC222AF7411AE29E38C8082CFB5A1DD652C89AF1B7637625B1FF41BA2DDAF
818E4F0C865FCD784780CE7311320342779C2B2454F34CC0DE461F71D1182AAA
64495924A1D5CF3962D7F11CC5C63E0409449EA4D51191623915662F2F0A1D90
2B525F44C398E8830346080F988EFD978B4429BFCF0D9867A34213E33996E9AD
839F1EED95ACA7C17C703AD92A77CCD735BD0B07669FFC3DE308DCF63B14C9AD
FFFB4D6A67490945484C11A405731B37A0CF0AED8CFD43C94F6EDD52FFA53003
CE085663B6CB8C989CC922052C91347B3377728FBBD6DF2A6661077A4F99CEC8
34B01A90611684E7425D02E35C8F8335CFB49686B16C5099F8137CD9A5EDCFE4
056943C5A85D186F64352EF047742AC59C008CB7E78B40B57D4530EA245C9137
F8324C42F45D01EAD4897E076393103A821351134FA4C7F3385F44169568B9F4
7C09C702963E01CE3A2143E7A9395EFD5819976E701507CD07A53915D3EB347C
F5B6D0E925AC8109E349B5F8F466884B09135E402FDEC142E474299805083D3B
206F4B8605263C7A04EBD02F74E709B13B8623E3076A9A16D9FC298270C67C3E
100C15D234CBD9015DEAB6098D90FE3FB6B6B4F6E30297DBE83D71CD2428BD98
B40F6D22993A64C1FF0DEDC660998A19B6E91241F14D1682A113D829A96D7A99
935C1632109A262BC86251A3BD0711C46A9A388A44175028E4156A6E9A9FC4C2
47BCB7958862A9635D1C81426F8A8503B064F244DA7A57BAEF103D37A95DD039
AAF0AEA0A5D49B7009AFE6D1F8FC701208AE702F84C4922F3C0E05F183F73FE2
03F7DD683468858DAD1222881A7F8C4519181E6DC4E8ECF99C6F74A1C5966346
D7AA62E8CD0351FD71ACEA82B6529331AB152CAFCE91E6218EE1B45620F9A72A
76BF236AA2AB39B4785F874E98F7A457A53D51E67BD45F959F6B6F6B80C50FB2
870AA61097C62154E0B91E218FFBC60A84713051EC3EC96AC364FE9A3335EA55
FF9BE649CE9EE8E079F46A5F81CA02EAC4B8736F7A6E2656C454AEFC4C260CAB
E5FF63022AB2B66CE0122CBBCFF281030065CB56711C98BC3E4648056FE4A5DB
F9333E80AF5048F5DA62EAA5DC7C3390226046A24A5AF62E6F18974F5C8AD2AA
6C91311187B4B34AA4E6EA29D1D1AE406C7B00B7061A1BB9D4624514416C9B37
BDC0498097DF071E130E5FE7EBB6338A892839466E310D69E7029EEFADC62E10
92C35E3E114D4CAE009318A72A0BF0B0634CC66D61D8C5FCB3399F2C8C9AF0EC
764477F6329388A2BFC2902C0D789507733027E243B1EEAD11FF3DA2008C5437
5252DB1E44E1B52AC3EFD7FA23EF17615FF07241BAD13AB6921CA5E5C381424C
041F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 69 /E put
dup 96 /lscript put
dup 110 /n put
dup 112 /p put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D91C3EAB1FFE076ACC
8CDB120739794879F0490FE6A5EBE434854BBD7143538D29199F4F1E176E14A3
9540A0197C6CCFA9F29ECE5CB79B3EF6B7AAFFB00FD097FDFEF59E6739D9555D
4759EC4B56EA4CAB5A8F97053866ABF9D03C990999F2A76D84CC6EC36C45A625
DBAEFF80CAC0F4907B007013EDD61EBA6ADE79CC45C3577B5644E29C800D23BD
3EEE563379F32135D5D7DD5DD27FA8E0BE27FF4CA6F26A3F5082B72DEEE87933
5EA031D3CC01F6BBFF500418BDAB71C52927B2DCC1DC7D537C1FD55090B7EE16
1150F6E0EB9D6A2DCD944C59CE4D278D9C1E83E3E0C4030D99EAE788533AA653
435A3875BC763A5A1D09BDCBC62BA0AA2611EE6B5B8FF78110E52C5C955783B1
D63A754F6EAC2B66489D9B971D0C644D57CC92D44C504A7DFEBBAF4FA6F9A745
054D0D1EBBF25EE1088C831A9A83FC26ACB8C1B5200F66A9A20F7A7C6C19490D
9F71EF7226ADE02787D7F04C30298BAB140FFBB4F373EC3CBF19EE6467E27C31
9FFB29FC7ADD0DC9F369395A3C889B6657AA2DE5FAAE23D016B30893DA2AB6BF
05C86B0E799C5BA4954E36ECD69EBE02F0B4F97AE705D4C0D75D38F58D7C348D
43C25A01AA965F8E319CBA7CF77D11F6E2486203363BDB464C28DFD188A2192F
0F03AF21FB5FDC46C0D51B93EA657D1EB5FE89AFA268B4F010047B40A2D1991D
04BF4F43D10AB9E2ED6CC2010FEB3B1F58328BAF1F0B28330E00E9D2AA78B648
E08B93F6BE628EA7AFD8536F1AF20D557CA8FC6646B54B20FBE520130963AE91
563E591AC05C6FA1D3B1FD5438E3BDD0583B133F843937AD055A8196854EA3C7
31B984AF7CA95B1AC5E9EF7A178919C7268E2BED55A1747A82E93C69CAEE7228
5EBFBA3D19261F5F05F6E646823FF37BBD27BBA9FD8C8AE75A0F654C6A69EC60
D2DA648F2292F0F8018AAA11D171FB43C916C041AFA834A936E9455FB2979054
C4E202B55721F094B903DB7DD9FC1EF5A62EC1B802B3A42A55896773CF473CE3
135E7F6C7FB3F31037900F6D5DF6FB41E3F6BB8183D191B95A187F4C4C58F0D8
251AAAB27E10667C16174FFB2B668A216B39577ED8D8B38BC03B5A3E91A9E82C
4F3D234A1FD429C90A05B4082DC13D8311F4F789A12F6F2954EE391F408FECFB
FE008201A3194C6719EF3D7EBB8F5D9E28DCAC0084B438CDF5C63B764CDD1A7E
763517866AEDE94F6ED5152F6C3275F053F420B1D668F08D7013B8D7C49AB027
0EF153817F669A23B048EF5B90B7F9356CEAD4F4E8BF721FCA400929A5147B15
B0D7EC6AC07E4E5F389C5AC17D889F715C83E9A3CB2CA8A495069DBD6B2AC1EB
E59ABF0EB535CDB34A2009C3A1BA0494009C613905D52B723C3DD9D5793C890A
A721FC9CA9E6C248C1C48152CB31E6A81A934C3ACA74EFF3F3D1B72AFD7CE857
552A676B09991B6AFA798BAEC9F86B9C235AC9911A369A1F5AE2497B4E3CF759
3FDC2AFC4BB046A1FD45DFB1FC7BDE92932F69D87608B609446D96F6B7B77574
EDE45BC8F1B9C02FE2EA44F862632B1F395C1F60058DE7F8D3E49BDD6AD5103D
4562E230C4E13FA1FFFA432EE38F964A996AEE80817129C9F2D197277D6A2B57
5A51DD77097581E5B5E372C8DDEC886D45A9565FCD56D3DEC4D6B1F75BB191D1
2D12C380DE6CC4999B10F29C33B5710A3A4A98159A7749684D0AAF8D4F140935
57D58C3FB4B1741234ABAA7D8763049DA1AC78DC7886ADAB8FE2471ECEBAC830
4F44A9C5C6367988769B045E8ABCDDB4EB62AA2BB430B77007A9A739E24F1B9A
5B0FB0540A3443E4F05149EE8867131CF975C4B25C9226AB36B68C425BCA9F0B
6DB64D624798CBAA81CA564C321E0382421ADF233BFED7A92F10EDBDD440BFC3
55ADD148BCF0A6DE6A39A4D412D11A9390877909E469CD573682295D31DBBDB0
7F2FAFB3374E98C3B0C47E17C4D424D9D900A2F3FF03FA3DEEC048D1F8A99C48
CE3C52A90434793E2C492BC8551A5940A8422CB648B1407F8416157A62CC0D2D
5B60DC2217653C0D5D78509A3A9B4F7AF6039B363161D882819B52E803E4A596
8EF952AA66DAE6FA09B6BA727F4289C6C81A10893063AEFD210CD8E802AF3F0A
F3EC63C79FE735CC8491C81446102998A3596ACEAE3B09A6F4F3DE33B538062A
6B0B6E2E0A9AA146F3A1562AAA879E64D15A93FE8582FEDE40B18303A132C589
DFD9E1EBA515D7F19C1168A6CB23DEDEAE42B5E20F8418ECF3893E24F8601563
503F3F1A385F69F8EB677EEEDE8C94FD5B7405067D600891CED57CCBEA410DF9
F4DE01AD56A69917A9DE03AF1CA3EECC191B9A61607B689696E07A75D74FE501
A910D494340D91B6F0FF7E3642495902C196168065AA0D887233DC6B926CA781
331617A8AD131079946F3A4FB8C5607444C0DD899CB8C3BC28909DAF42DBCF14
A455C31418ACA1601204425751E4B9BD163160BFA41566816C4FB52D5CD5F9BC
E2324E2113EB65B0EB2E7CE9C95BEAAD191910CA6C7DEDD1BE847CFA22B55B1B
EA7A91FB981B10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/UniqueID 5087386 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 69 /E put
dup 70 /F put
dup 78 /N put
dup 88 /X put
dup 89 /Y put
dup 96 /lscript put
dup 98 /b put
dup 99 /c put
dup 103 /g put
dup 110 /n put
dup 112 /p put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C1427090573E1BC8D29A217CCEC
0D2F8D66342CE482C82696E65DF25A9A0D5E8197CF92E39923627C5E37F1402A
7A70057E5D99A55B6543C2AF2CDFA246607D663DFBDC0645DBF828418D0EC8AB
2AB23D24CF8CE07666B85AA2C769DA4EDD9D45B643CF704F17BDC1FA8D6B8D4F
A4A4E2AB54281F034D54A56E887E7148919C68465142A2C0380A50519CEC6E1E
C232D79D856777A754076C4C3DFA78ACA257BCC2D485BC0649B46529BCD63474
3FB3B07A867CC03FA1B641199652536BC11301B4A92B5EB6D2DC10C1B4B052BC
AB4D117204F0526305804170A20A69FC97885747FC4EA48A09618DEEDE0E88F8
7B3C1CC5F8EE61FF07D4DED6C4543B833C410575C0CED9E0E3C5AA8B5B729E59
16451836FFA20A22DCA680476A0E2F3CA21869CC19CF9CD0F897F0E26E23C9A8
B60DAD05C25B31CD7F948968EBDF1EFABE4CBCB4B59F7D94FF33EA3281C5E352
B4D7C4C16789012648C6C6CA77370BA3C979D11C72BE4807BA88A85914314A26
8E9A30EB41F7C771758410E7D1179567B49A927170DB0EA31A11EE7634FD75CA
EAA480F411A98425E5EDAEB91BAF1279E7930E73FDE400C7E7A7EDABD1DEE26B
ADE0A64FB79CF0E0225EA401DB454BCF24CC776B375C6FAE55DC2FEF611B802E
5B34CDD28CF7C0A09F68895770EC42B469B08C7092733A204523D77682461E0B
5960997AB5022480252D5611A19652FD3242FBA0351FE639313C561BB821C557
7F7ABE9681641633EA61D047A202E5D0D13E64A5822CE3776DD435FBDD7DCFEF
07F93366AF7F26F35ECF8D5AA73D81DB913B07B991B03FC783EC9AC7A95C0832
ED8BB8E1237B3467B1A26791BB653B865750745817CA28E227647070692E6AEB
04EAD823AAA6C5FFBC6DF009421B48C8026F8DC0E546617BDA4097FCB8FCB635
C4E8170A5C4DC3BE1FDAFD9348548BA85064FEA8D15C16287F6904B70062C170
FAAF08633A13C303EAE11BC25DDBE9B37E12F0638352EAE8A9C56346AACFAD40
420232C78385EFCA29AAAF9A225424A889FDB971BDBD300BFB75B710119768A1
61F8C276614552655D10351AC382CAC59FE7782CE421AFEF19004F3B4CB98AB1
45E4C03D01CF167B0D7BBBC53023A12C5B3581D8F357E61514378539C64A60A9
2DAF8DDA4F790910BA6CB5DE017D2EE6B73A28813DFB7765742E60E70E5C5CA8
4C02C18C315CD2390E3CE5611FD77CE4D5343389E3C6D196757CA11233A368C6
966BD4B3FFBBCB89F64CD82218210C4720C63E0B47C3BA1646247934EF6CA005
C53AFD0E3372E8538620A2DA576E052371278C520EDE2097309D269B34D2E656
A1292F72051FCB9B24D117ED792DA48B7A39702BFD50EC8C417FAC1D67BE98E3
48C2215C120A7D01DCBEF33E2B13994C1060A0CEDFF5D386645654F1C5593A7F
BE0018B685A34C3C85CEDAABD9BCE6C4B4A013B9D7B1B7E0041EF68AB5AF9B94
6FF936607FE6A61A1E3D74346D1DE154C9A6EC3722200E422951630DF8F5558E
EE5E17E13A12D2E71F70F1F26FC8BAE51034DEA7BEF40610C2299F6C6002072C
34655628A87949CD0D4D159793387BF4D37D653C36A4267C584F7E742B00B7C9
2F18766E666EB82BFAB5BB2E73ED8F59BBA8DE81E004DB4D331671CA239FDA33
5517C9F23D317B3402D11CD481BECBD5F942F8F3732DDFE80B8FC0AA37051B00
B1A3284FD5AFDFB8996F65750D3B4FB1FA006AE59A0E81FF681DE9273886CE06
895EACC815D1ECA8ED5A357189B321503F3CD096E36E7827724AC12734235000
65E7872140F0083D9DFFC0FBADB4FAC7DCA91001E8FC7F88C6634D0C7358758E
0416C38CDCE2531E173FF506085C6C21A92A28F814F0B54506CDF8D8908D7BD8
5B55C77017737C19AA7E736FC69B1BAE5C935C3348D55ECFFDEEFB7FBACE16E8
40BD0577CDD8714CEA07BD2A8D4E41AA568481BA733A814685C0DFB2B43B0DE7
4CCE003C0FA9D3CB4B3959282CB59054AFED2BD577CC8299DEF83D0E49CBC64A
98DB8E3F727CB6161D75B9FDB02C6810153711E65BD168641878949CB81A309E
9ABAA3BC58444D40D92AEE4E32F10C31AED57020F1C7D2E9C60361567BC19172
B8F9E3D7BAAB05EAAEA8FCB5717F58FA275D9929C4BBCFE9F54570AF88E51E0C
205E5919BBF0826F82143F03264072B095228B337254A68DF66E8D63B630EEA3
A1EF3FA05B9F2DD8227DFA66E298DDA0763A088ED7A1FC7CC8635BBFC1C3C283
3FE2C3D27B23820217AF7A142EE510090EC1542651429905BBAD1BC355974518
2E312935103F67A69A8EF2A128A612104DC75FD884F30D607D52C94392584C01
3F812009FFCDF9814E1B0477DC0CFD97B4449C00CFDC2D1E1D859219DA16DE24
577BFC70B901E596D8BE67E902C448DFB1131F33EFFE157FBCDBD7850E9C4716
97D02B3F11F9B6F3B1AA44EEDB9BC34F45717CB9545382037EC80DA15E1A6FF9
CC85608A1E4B603B208FA2D3102F4E126D130C3A285BBF866166991EE996B542
27D646EB13EB4A98B182CED72A229999DB33ED41FB8E1967AB00565A8944A54A
AC59AA1F88260A514AA69B83F7AE56E5AAF6F0AC857C5A7E0A796B3892A466A8
E3F08454A1F03BC306C3234F33A1F8D40A7DEAFE6B1A75666AB8F06DE343D117
CE3687E0B57C24244F07B191B578D9CF20980B148F60E9B45A37461320E35D7E
688A5CDC84F9D8AAC86170F1C194B85DB03477AA7E2B64E690921B5B5097E39A
EB70619C4D2265CA953CC039CB7F3B098B80CF7D69FEBB6A2932943E196C1B5F
F6F56B9686D56D605CE0961B205541620366D46CD9FA0D3E24F2FDCF816A1E04
F54364EB21AE739CCF9E7DF3F7154E9266D082F3882088EC62BCF1220A1C7B3B
35569E50876CC2123F270ABC98CA382BA1F17D11BBFB36E12D4CC1A206A0E43D
49C132CFE22AB4801F1B83193D809EBDDCE1C497A26235B7D00DF1D1C7E2E5AA
B8449EFD258C8D18812CD288A63AE7D85F5ED9087B9BBB3E581424A4021850D5
F4970DDB499625611D4FB8267009029AB9912FFDD630DBBA84C3E319B9948E4B
56ACA0E4D6CF285917ABBCD1B9D41587D3A9DEBEC33FCF27C66A74EB7AC95BFE
5D17BA5DF26430EA94AE83885498DCA68D5F0F7A3BCCC93925137AB0EEFA8BBC
E7629D156014983DA65D5A078EEEA6668D9C6D9B705C9E4AA19DA4133A200015
DFED18338D3B1C6F5544B0C257A8F2319EF8416F9AD6DA26540CF0A924638945
D15CBC492ED15D315465F0CEF792A95B5844EB4805C3BCE4A6A7937E22E995A2
477E01BF7F5D21A8001A29C1307E887264B1E5E0FC327BDA82FBBF60E93EDF12
4AB67551066B5CFEC2203FAA38F3A899189978C70CCED052FB931322F9192636
1763B8DDD2658BAA33BE50C200909FB0CC3E432FE5D692F28CFB138EA6AF7721
B2B3C68F535E9919CAFCBAABCE4E028E6E753661572922DE64DC096298CCDE73
D20B47368A2FEA606818312989E797DBFD024E9F1BED08AD7176F381A3FFB8EE
9088BD692F05DB56C0A0431082594B5DAFE44CD2D5997653580D2E8268DF403D
E64A8FAF6702219BEB29EE6453714C8664ED5C171D94E727F95E8598B233BD3B
7B34E1D3FD139AC6EB5B4628EC8CB80230EC9CAC1E3B489FCDD70440A91286DB
1536A6D9B0182607E8EBF610C5D45CACDFE1CBF93965EA1CB8DC066F786DAC9B
8C25DF6E12A20DA9DE0C63F2603E855E602BDE298E782F84277397DAE697406A
A25E59A78504F58130A375D49A4E8F57296697A2AC73A7BF9EF93CE5D4C965A4
94B9F00332EA0CFC4D9678BA621D172A1E40DC679B652EC9ED3E5AE86D15C7B7
83A74C43B0FFB6AD940DC83413EA89105AF30865522EC112CE447E54B9423CA8
0F04D161C1EAB889860B2405C571B335E05FC03CB6769D338366D94C5F9BA696
6806190C027D16240963E26683EA07F252CDCFCBA8F000C0FCAAA1D501932297
D196954114E8086871E0FC19DB559B378236A8BDAE8552F230A25DB2114B9D07
4D96945C50A4F4E98DBFF3CBA041E0F7ED0BFC7C62F1E15EF801CF2105D19CB9
FBD855ABBC3A1D43B6A19515427E5611467953D7FF90525B7A4661FBE3F8AC74
70FAA93ECDBC91D43E091C3EF9DCB042270ACC064F47984941F01604836ADA52
19C93A04D9CEFE69468580C12EEC0FDC9A4B89BFEDC28ABB07905824BD19D715
FBEED491C6B0DB9841137409C5194676B2FEE41C5650483C24DB7455ACBE8B37
65754F0577068BD3B33B2E4636F62CE289687F7D303FE89BC2D7CBD1BE5056CD
61C8C0A3CE8D804F50CD3DDACDD87229626217D697EA80D050026B9FFA71908C
E1D1DDC52329E3AD8C3A7BD668DA535FE7C90A160FE5BF63B64D1463EC8F8E73
8F86E615F24513E99B41ED13ED06FB6D63EDDC4DC086F0747DE2876D2E62B042
CFB4DF8365EF3EBD2903BE953552A4914FD07A249DBA66D4270D7CE38C46D3EE
BCFFE6987DC69BA07468C5732234EFFFC6CA8ABD49B3B5B72102DD4C2061948F
9966E8C77EA69544C872B4859BC4552FD70D586BBF9FC51B0EF1CD7811F196EB
D107FEE8C9F5561EBD4DB2620A8FCAF6E7E794C4A2B9AEBB42FA991D39E0D8B3
925C45BF7ED59B9EA16A20D5C69914BE90A8165183D266BECE280F35CA61D381
74959E9FE0AC711A54A8E3AD432AE2FB5F59204EFFD8D6131CF6C8D81BD845B8
B13978852909A0F4207A2E23468EF4D487600219807C24F7F290C5A55D202A3C
9FCAC9B74365C51E042419D5942ABE745763EC5BA70833AD51C4D692C9942C31
ACD8880D83566A1C634AEE06F56C9BD57612D1A75E47BA64C12850E74C2F7B33
72199EE3698E8C0022DC8CF15E46D554F0E2328BC4ED6ED198B71BE6977F6219
FB3257EFF0B72DC43DC45F8FA7097E6839D313EB0E84F4A88B7EBBD7457F9D77
C6945647C692342E415A765D20637A7C906252FD9FFDCA059608DF49093B9296
79B7BA5B4D5FA2BAC05FD652E08C1158F066D580C74E017FD471CD62EE305CDA
7603FC701E0C0532931BBB8B1825352C62FE1D7424F99834B633049B1F39111D
A57E4AFCBC638541A25209D0C0925B869FC7AAA8254FF96C9F5941A2110440CB
1180F1D11E449B11715ABE228708B9F0304852CB7B0D221A457E0EF8D3E3F5ED
BA03CF95CBDB5148718F22D26AA9E0DC83FDD21A51FD51D2313D3289AB9316F7
3E7D4465C1698F6EC55B6B0F0CCE491FA3B104329E33D84E3D924DC5D4503F0B
10E1D7CE6D522299B49E57465C4102F0AD14665EC8218D15BA3C749EEFE9A5E5
0311C0CD8E1D3E5280330AFCE9C239D09C54CBF611DE47D3FC63C645F9D656F6
51A733F1FA76E5ABE0C599719445FFD9587022FD476D544999792F9E395BC894
D8AA9D1B89C071C63760499743F0C1CEBB1FF6DD24FD05C8FC76D9F1E4023A23
25B71EE2A7D7B6D0FD10225D3930199A0AC955B88CBFC3B9AA690B338BCDE49A
F2C6CA9C23D6F118CD144129C8078B3C00DFD2218C180B5BC24094AEB9EAC4E9
8120CC3B171411684814C238D95B3BD4D3DC4B11B22FF30723FBBF16ED50949F
8C979EA66BF8F3B74D98B86F6F051BD8B8CEB65451F5E8CB59B507AEB7A4E2B9
27C62C1A29F4281D5658A09B091D05ED56C3CDEBB65EA4DA6A93BA3944CE684C
5955D8EE9AB647E9FFF42E2DA58EEA9DA66ED1AA3CF356A2F88EDF8446AA7329
5D34053D4C3AA166C6A679AEBD81B1E7A3D6A36E8F5C1271EEFE363F4C7448F4
81E5D72B9ABB5232E7DC4789A87F6BDA2533110B3DEC8513A27384D8D4AF9A34
D3FA5E2E39FE27961FDF8F95E92CE86098E200609CAD724E3EC3F1782A5C89A3
524396C81E3BAFDE8AE62FC27BF9B9F6E51B0102F638D284CCDF375BBE9B7096
4B3A8AB43F8C7B2AE9D651ACFCB9E3CE1107C5DFA820BF769AA76CCE95FF81EA
BB9F214C228B67BFBB9F3537ACADF406A60F903F179730CBF50C193CE013EA0C
46B63CB509EFC9E29EF46961103CF3929A68FCBAF2EF2C2911F7A0F217BE43D5
D50C7D502562BC23C7B914EB3B574E96C31F734A7B9EE985271D4939D66E518A
FB1CA83BC1448131C502174CB5C4C2CB9490BAC5CB13078BD6FA98738903F436
A55946DF2C936B7700DC297F37D8A7F5AC1E7B4779881D962EACE2B890462B68
FECA71C8B1BD20DFE821E288C5F5B614B6693420F57ED411C5CF6420918B3061
AC5692A305A009674D3973F49E65C5DEE11F67F640FCDE2A7DEFB1FA1D90E20D
8544C8B7DA7F553B5FB9686580D8D5EBFB9FD6DADC0609E2BCA8A82ACDA406CE
B27917D035661D84CC2F43905AE4803DE436E7C2379793937634AECC879DE1B4
2A26E03BBA8580A2E7E552CED139F79F14EF47D88D272F97008A8745F8A958D5
CF25E9A0FC394BC8B2E718C203A07D000A9876FC693276C073F8C635A04FEE7B
F8F800B272C4AE8E775DA5FC11F2B66346DC6F336A73E67F73C838384FB56841
16012190C849F9D4A62723140865DD5090D3A16BDE4A59C5B2A39695D8FB3737
873BCC66229459EAC9DFE512FA68CE7DA625F13D9C50EBF63208F3BDA1ED7FDB
80589148834B7E62152F97A19C92D70782CA0A0C5DF32C8176B0F9A7F43343E0
FBEC58E12DB9524F19A735451140A6CEDE9435C966D9045F245129F43F7FDCC4
F67D4752754B341F612DFB0FDAE0752FC35C4A2151B6C6DEDC917F264EA95089
C731AA786DE4925FC5845E82E051F3FC53483B395A5EE4C826A2D3C14A50250B
F6420F1D1D1F6B56D2B4D389A1729D1A7CBC37A6B8192DAAA249CF2101E179AE
F0057752B4DC1137FD07A538474937852C3D1F4DBE9FCD10FE44CBEA16C6AA66
42C0F54F41D5161E29D8F482485C440F73DBBA6FA46127AFA15CD6E5FC82E03B
21FC7578D94B2F1522C55844B667CCBEF164988C47C93B504C66365FC2B7514E
3C8027B8C0D0CD7AE35FAAE0ECF4B919DDA99D63BC11529A2FE186E8DFA8A35C
772B0B7FB83FF8730B0E68753E27AF9D564AD4E930DF7E2FE0A37A3FF995CE8E
15153A8A81A657DB049AF9FD922599A56C3F653CD54CDF3FFAB361454E3CAE80
CABF33336617FE2C32C57121D36C0B8DC625164B44D9D4BE7B7BBEA07FD23373
583E841F09DD22FAC0A2ACA79F39BEC7D64FB1ECD5783D3BC0DFAD53F229E033
9FEA3854CA4413908143430621BC9C3819DE1BF9F11640C696495EB7B649C026
8D62A506EC2081448267503B10675A9BA4F163D9D1B3304C550150438905A8EB
00715A6479BDB0874B6B0C8C1FAC074718B055CCA770CDCC89426CA588F63DEE
23550235DFCA18F0B2E86C0F49C31FD7472DCDC0DA3B0B6D03AE3C6C8DC97A3C
B13F5DBA7328CC19DB71357EB28CB3CED2077B608E1DD287CB50D0FF9ECB886D
49D76BA424A4E424600BEED51ED9361E52577BE5D1038080E5842996AE9CFBC2
6F04A92E0F947A043263A2B7508C2EEA4F9ABBBBCFF4859AE5F6789FC1F71F75
C2C40BFE34E6CBC3E4FA245D522EACA0AC722D94648A29CFEC1B29CCEA47802F
B128552E9DF56CDF1AE907C4B34CE110CD2D4E8BD9958C89A3397B5034DE7301
65B15E0A92A034BDB5F61925B624A7294FFA5E03CBB766882C54F2C002F6B23E
601E5345704A4C5066900DB25FC53876E68A65005144BD76A459EE099C2DC3CD
21EA3AF7AA59BB0D7425B843FD81CBA58CFC6F226844972EF350FAECEBA762ED
621B23A80DF23DED6FF2DE6ED0314C1749926CAFE712739C271398E450E41549
B3753C8F4BFCD2921915F904FD4883E66EBBB7154233D6A4F76B68AD99CE728E
307009BA20D7205C0D33B66ADE0E1D6D3221E2832CCA6925FA65F5D7E67B8CA5
86D42A59ED8EA160971D60E5C47F26AE8A9B1D15B49757971AAD72E85C178CCD
97CE49E32D2863079DEDC57C9D02F1BDA6B819214F5275A78C06EE161B4EBE11
8242A4AAE2343A443287D4EC050BFF2BEBC28075971BAB2B6D5E03CD07899E8A
449841CB277F211AC56BD934D856436ED108B6791E062E9310B694FA1D162AAD
B69A0F1A84B54D649EA5813094B7F6F261C926C06CF8F609C6BB13557C423404
A27F2E565544244765D96CE30732A6FD0A887FC59AEFAB90C358356CB92207BD
DCA539A61D1D4936D2895587E2FDE2AF15EF302C0E7B7CF51FDBFD4B8E63F075
67727FA5CACBC9D01CF065DE8A031A093D6CAAD0F0D90E2581492094CB8A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D7EF335D806C61FCB6819
42BDA68F6859DBAF6D97E544643B9C3417305B2906D26756132ABB51B16D61D9
7BAB7577C8EB4BCC88AC3C841E31ED7670314AB423198D61AD097C884E503FC0
39FEB875DBEB9D2FC4F0ACEF6F2EB3BA5CF40C7AEAE55E7E1737091E31683737
5DAA1478D85F82118A9A97F4AB7965E98F2080E281A85C09163A6B53EBBC396F
3349E6BA39D975E878BEB31930671A59F64007B9926C68F4DC15189B303BF5B6
F8A110A06C63305350439AAFFBA750A16A49E6574DEAF09B172B66B4326644E3
763896C8999441475183C822192EFFBDB39A20199F90DF5B3385F1BE1B61F590
2CF177FC1ACA34FB0AB31B8E41AE040F2700E6CB1F2FC36F5553D37E1BFB8C89
D5B5D3F2D626CA6491AB446D1F226CFC166BD29075239EC4FBD32D11E777E970
8E1D3A8FD58C159B89BE3036A38AEE05548AA5F1F75AFB1A283AAAD3E660F09D
520C9484E8BCED896D7FC83CD20EE8C4D5A59E02997BEC92B63F2745F618CFEC
DC45A859B9362D8C8C877726A84097AAEEBCCA32CB4A846E8113F8825A21D0D4
869F020A7CCDD2FF2B8AF77085A67D86A4C254E91D10BDF61525004342D0B052
83E6679DC30CE6620F9266CB0307A536CCD95377E0D3F55990628E491E0A306A
BA070CDA85EF41E27E2C486FDE1360C154924DE70FDF4FA8F2153C30D68586C6
7E8A16C560DBC0D4941CB6DF6A0D1E749406002328111B4DF5E4EBC8057FBBA5
62518988C9DB42B1E26FF20C75007F00EF200564FB5482E70985D092DD49D77B
928F1470EA702423E369484A4945CE4846C95AEEA4C65E463AC3961D2D195C15
60E30A519C99B874ECFEE099B33FC49D08807696374A4A48ACA45537199C9877
FAAA0D6E5613A6C69F92676D92FBF5A462AAEEB20D7C10A20D83A8A2FE4618E9
FA8B2DD43BFADBD539C980A3A5103B63F9210E9981AF8EE6A5923934295A1A3D
30681A1387AD17A91C5A538841D2C14A332BE6AFDA3D6FC174F846076C1B977C
6D65EF2CD1D6A82EB35C654B49D3037620EAF78E23494C37D23E04869983A783
5B839623E33916CE5D275E5D41DC7975EBF76F29899C5039A0188028CD025F87
6A5FDB0A43FE4987D8C019915062A6ADD50A9993A3AC6E05026FF59233FB5F37
FF1C0B7B16709399932B1B94DAEE18FD20F23448BF15C3B890A34871CF3A7E15
F41631F29A607A1F49CA66CB1021EEB2C897FB562C26C291810D602022EFB2CF
6C17EFE485B40133844EEB06531BB42E322F3F06F799C13DEB92D6637B4ADD19
69CBF6FEB66356513D63F1FD3658D897650B7A9919BB152AC1A44F71A6BAE12E
4BA3E314CBF7791344D71671B96A7B70F79387E53529AF54102350EF2558A7E2
C0A2B8CE015A306F1EEFB6694B71529DC7CF1CD8CF6D0E13B5154E54F1B95CEA
E0303BA8486F19F1C84DC5D3805B02D73C22FFDE29D0AF2B26F9B8D308459C6B
110DBB3ECCF7C7F79F6B0811930BBADB2672DCFF4F82A8D7A89DD281AF0BC516
AE5D6CC4E176544A47869A64E63F0260D8BC35987EC5FCFCE1B41FC1324F0F30
6941A360488460352E7F6497C9C4BC364259B91096A56BD0E1FCE53CD6F6133F
F1AAC877B5D434222191CA0DDC7A010CE0990F2A98633876C9EEC666E45CED43
0993802F4BA86C8DFF65A35D632A676599386A9FDE5675ADC0D61E05B8B32000
D4F6A0D9B74E591BADA348BC612F386BF7342CD03BC49A6759C877321D70FBC7
D6A970C9BA6C6794E3AC06D503EE876C915252EA75E2A4445493171CA3A4439C
3B8653C05986E9A6CBCE366176B3F1CD0F88340E81D27CD4CD21584E3BADB225
3CA07B1CBD85BF493182D44236C93F939FFC5263B31A4F690249444EEE34A923
5655166826850908568B59EB1FA7924A5E129A0C107CA1AEE073345C811ABD76
75A8D085F14DE638919706B48B215CB8DC04061B5CB222685EB6F4D236690670
38D82D4EBA6E8D9220A9BA1BB0A394CEC76E2662347DB60BBF6054EC1E1325B2
310C8F6BED51D57E2961B0F7580DF2D80F0135C5B3AF3A321188A134B8F7EC4A
47E4C44F37F952A72985007592685E03984F2F9AB64AB4A98E035E8C07A441D6
2BA1D6F78B522D9D1DD04C9D41BFF7B95FF8DB7409851DD736AE1E1636174399
D9E9174DD406F83538A70AD1BCE8B254341CBCE4CDE08008E366649A7715AA1E
09D56A9947DC9406DE7410672590BD7BAD05108F254804C9126F6A007AD69765
9D0F4B9B7BE0BE1A24DFE4BC324C436303E25F013D1F713C24FA7BFD9F187611
923C07007FDCC1895EC40754417E393B7DB02B92269E14A11BA6A5BC7DECE200
29034C88696770A2B8A2FC43AC60378CB8294F8A392BAE3346AB7410292EB448
9007C555A6A08B437AFCF723A8F721B062E9F2FA31E9C9379F2B3440AEB83539
438BB83563DB8B53797B53E64D40555EC96E760C8245A1AD9F508E3054FB4E9E
9E4CE34660A7B6C084967A50FB5E53F0EED19252843B5D9A3073EFCA93AB9C60
B4696B15B301C63050962679C494D424A87937E19302078128EA6FCDF3022F45
2D00E6C3F486108289E9F1B5E29E593545CA1E8130F18B83D8AE0C242ECBCC6F
4AB9352F2181C8920E7864FBC8B92B77D936B216761DFFCF89E918F170A5301E
A5DCE51C5A0B5B95DA6D10E336A9DA068E4F9846985E86A9A526016A5A7F3146
BA4FA21EE7C291EF5B650D440B109178E736623A69075508D7162FEF6BF0FA15
8B35E813DB857C0A6824B2D623328DC3238D11C2E2B2D73430906C34FAC40770
4F3B902B9DD9529CD003AD4E77B3BC050FD891242E3F6142149E9FF13E52540A
31905110C57A47825AA81327CD63B36B4DDCE39F3E5908DF96970FA779F51DD7
0FB5A619FFCC65C03C73F8FD3927BD1EE42F7202D5E3A001BE7F70C1C102D057
7CC137533CA01DDB73747CC46A08F36EE1BB8CFFA5CD363B6D5A1736659B53A4
E32F7725D5F360452FA113281E2D97BA8D3BAB84CF7068EB16D13BA07154D1F9
EA9C31AE54D8964596F15509C0E96F32AB08B88BD4D0321F4B1FF3126BAE5309
894716501A27445BC018741CEC9830D6050CC3237265794884B2D252F2854291
E618FB3093B5BE4CA6C41D2DB141A33E6F54C1B9ED70E85A748F111A2E7D2D0C
99778A76CB2A4705F3FED339420C2B202EDFC2C2A44D3468D262107791F3E7D1
0A4F3BB9375B7CD59B1C3FE5D6CF4CAC41A1342413BE6156CDF9FAFEA485C13F
D769AD0363A7BBEC37D3A1A6F47031138C2DDCD1A814E0FA9319F93F61B94385
95A5B6E6CAA4CDA0371D452F65EC9097657F51E15DD27AF950510067B89736E9
8A79BA2E6666E811E0A772B91115CDD93EB489AA48253B5292714A8F491E24CE
E42A6523358DE4A06B547EB30B5A59426DCA09CEF89F2F978AE92B904F0B0791
C46F3AD57D9607D23B2A657731DE5106108299DAB86FAE711AB305CD0B59FBB2
5FCBCFDEB3F79145AE96AC0B9D64979895FC011F01023C9D3598C7D0A1CF98D8
13323DBA660BDFF8FC0594E9507C4912E0A4DFC47FF9D123C9CDDE68A091232B
BA1C539D46CBE0420DE457EE41558D4CDB963B1104272310678F74491DA15723
44FA550721DE4B63B8C04254AE7698444D303624FEB3100EE29FC756165BF752
91EF6E74092B38FD9AF218FC3CEC5085D02AE6333848C96D187C57B8CB0250E8
8073D2DC4A22009C64D8B2EE912E2826B7429F0143562EC248DDC15E71761462
FE9F1CA4A7936C4DED25AC3570D9E0A6DF72487DC72BF7055BD880275A7AAEAF
5278A704AA73742E5A5F457298F1FE1ACAA656CF450FABFC2488949612A16D57
BD7881D31AB127F1D1A6D28C2DFD7C1D10203C06EF3F7A64F0E4FCD2B5C2F665
7467529B8601824728E560F529B5A0225B9D50E8815E67973478AC1CEB9B98FA
19C195190B0278655C547990E272E8ACF4DCCB9F4B4B3129C743F66B0E2B65CF
08B92E350D1F2203413C70F41B640226603D6AD584E5DA5A3802827B5672A08F
7799CC81ADC327946749C35808631BAB50B427435BF7C24968B44D1B489F49D9
99FB2FD52A7DFDC782E9B72EA672065D7E1A3BC9EA92EDAFAE3A0310BE52FF28
7BF4C30A08AE4E9013FEB574645081CBAF928335481B043BC2F2B1EFFC70A524
4DCB932542ABB8CAE372D82BA9C5569CD39CEA3D28B6228A8E3A9678108178F3
3EC3F8F3CDA739A8208A7256BCEDB779694AFD5724351E5272005604BE95BF37
24E4709770A9AD1ADB9CED994238C395C25834CDF3ED494C89C65DFEADA9B1E9
383846FA7277ACFD896177F1F70EAD3CE66A4A822DA3063FBB7F245AA757A20B
5106CC7377D49B4B4855817C22E5D249DC1355749F06FF20DB625A40543D4A7F
450584830D8061DE2173FD9AB71872CDD4A2C07F94187EAB50D96A75CAC0CAC3
139325055FBAF9C7EDD3E4B4C930798818372D3A2E8A590F525F076707CD7DF6
1CDE9EDCD65608DDF66AF9745640DA96D98800443F32CCD5F5AF87EDD787BAFF
C6C93AF8FEB172F41352BEEDE07460FDDD331B29167A58B1A3542E1141D08701
B872306B4708C3C78E2112F170144D967B9B69ABF4827E09DF2FB07F40288DD0
72F226BB58C052D7F944B866CE4ED8FC5DCA8B728A097DC25CAFFF548F2B1D6A
19B8F288AE0A2AC8F5847F899A7A8ACE0F35340B144795EA1DADB1EEB0A101C5
2F7A0F89A53A0BE63CDF0CD9A4546C9325291D11D02F4C228494273CAEC235BC
863688B43E45786255A4DC7DD81BCB7440B72B414DBCF2B88E9AEE42AE3FD806
43CE4C437AB89E8283B29AAEA996FA92A8C890E1675BA12EC2461AD67314BDC0
E7FE0CB4D1C47EB42470F2062825FD602E76D0155ABFB620EE040DF357052947
3071C8817D1B7DB2CDCDA291112D6F55371ABA26FFB09FD38C65CC318DD3E9AB
50A684882F5AFA18F97A3ECD08D5D3898783D0DD97D89DF76F886DB3187F017A
7AE559F8C04586534390215FED635AA54CC7D54FE0783F0F88D6B1B02B5E433C
AA03658F1E7FE84A66C46C70C1E632C371698D695009B1180C7658B48835AF0D
965A0FDC4DE1FC4E4DD1BAC318E2717E7B2AFA7D94A6F29DF570C0B0940737AC
EB410B329AD66F23773C8BC72E954973133D448CB2E0E1D83267893DFEE28462
5097BDE94FA4B80C2483F99A912A5C22DF4CB73AE976BFA125F593802199328A
702E44A627D1E7B7BCB20D324AD9B973154B9C531003F6D946DB0FE6EC50B444
E7BE8F8EEAA651DCCEC032C7F8816A26410CE158403B4CFB64EB4D80157F57E0
509776BB523A1BD269021D4EFC90429432FA88B4225A1C231E91910ADA37E382
B549903534CC577FBE9D2FBC52DDC427A2C9FCBBCA5F91B5E8E9F4D23CB6E7B9
3B734C1CA45E3CD6BEA6926EA5679791D4743C5AC9B7F44F1ABCACA980D228A9
A8A5208EBEC852C97B0D79BDF422BC83B4B51DE9985D997ABDA91FD3FAB8FC07
48A47AF63203BFDD2740AFB11A4628D126EFA2FD9BA24CD2E941D849CD11E4F2
FDF36752CA73F4E29A9CAB9E821B14F15B5E14E666526031CFC5084689C4EE9C
0C48A72985276AE70079BAA0ABCC95DEE4F66F72133343F40992AB476E5F84F4
9B1D0C796F52940967CC04960E6059F6BE26EBF8CE5452C6167A41DCBECB86E3
084A4B117A591C138B430C2D10CE6A1C7B86AF130053B7E9268CF93B9763BA70
C77A82B01C2B174471AC60546DF3F774D3814481FF721C94CAF73D5DCFD86026
A21829E7622DD2B7FD2679D084716B4647EC18CDF8939EFC192B0A503A8D8AD8
DDD7FDBF80711A37764B5D1227E1E7E81CDEC1DBA0B63403DB209B0E863AED16
5B93230B9C7606CB953B09ACE65910521533282982BCA7307C3787BC304E49C2
7874E0BDD9B5299035A87E142B277FCA8C9AC9557F97784FBE0050F215500F28
1FDFEEBD1897E7F8734C7573B0B3286806EC59743E29682DD6A22B3F2A38B8CD
430EF341FEAB2A3E1DF0C1C992AE74DD6ED2AB27AEFF1F1FA4FF439000BEA840
24750BC142468DACCDA4002E09366381B35D554CDB77B0F15E951F2F7FCD1C75
5A0BE1E13961AC2D6319405C8DC105EB27E6C21ED7BD158B1394BBD0B8ACA80F
6E7A468EFFDDA0F44FB32709CC507A5B8056D49CE921742A12D11F083A6DF8ED
299BAB6FC1280FA7D8CE0D53DEB20FD2F10895BB8AED95AC89F1CAFDB0488866
4F82675A3DD3ED0601E5F8D083AF7338061EC3309EB885CF0BD48D1CC0DDB015
D9A513FB2A73FC253277DDF91BAAAEE61A2B30C71F43F4164D26BC061FCA959F
392DDBA187B24F6075F39DC5E1DF623E1CDE69C53FECEA0420BDED07210EA1A1
619F298E71FA5F5C80A6A65A8CC12079C24C649478843833534B15A83436BA5D
ACC7EE9F226EA9AC483B47FEB532CC4F900F7E81EEB276DC8BF3605D078CD036
4E3DABB886B3CFFA93999C32236A94304A0FF6B67A7C777A1E24E9A65FF1BFDD
4E6501A45C2673FF855FE49B1B42AC015C5EBBB561921C2A301012C26E550929
0A1CF194EB867D6A4809865C4A2FF0821AFDBE274003421C8DBC6C8441DB3721
4E3767C56C8196FD864F83ED90800F224B875C05157C7D271E1FF2292099AEE2
3D32E59971A89141025EDA355864B2CB30DF6E624894DB0CEEA297FCE91F225D
B7365FE6C240963E885E771F4B609B835A624211FC6D02DF7AA68AAD1061F11F
19AA231B2C92E23CE18A42C47DD0FA1E3D7E974EDFDB373771CEDBA6D5A31B17
978999D1D2C217316C131D2031FD78B042AEA2DBBD5263B1B8DAA7734FD43782
EC25AAFAAB5D240864C82C7258AB777711638D576056949C002D7B9CCF838DF5
C56306B42475A774AB9306A329F9CED68BCE525CF0D6881D36484184F5DB52F5
38D671BC4BC68535FC3CFADB1FAD380ED08401BCDE0875F4C7D68D96FD129140
3FB8DFB8A4B7CC0E7B0167DB486A777259BC582DD80604F870EA7F14326F4B70
B07150D6740DFBF50F9B1617245A5080877A00ECE6BBAB422B17CF46F606A0F9
24212550A63E2ED502D03BB1000CE084D7C8E0229EA162D51B559241133BDD08
44CC26D3A3E0F450EDCE4C8AE63A1B0CA9B68286194784B6DB260C9FB500BF16
52CA78F71BF3212AE4B59D35D92EB33A9AC47E7279D67557429834925E0E05E7
B305A929A32B2946E095FA5088E5AF0D31D435A73F5AC1B626629AD2F7D26F21
F2C415B3480FE80EB19644BD0823CCD5B03CB4346AED19531CAE3D30C341C30B
B402DA4D3F73E802393A14B0119464E133425AB86B069FADD4CE2E5DE87B1FF6
DBD93F9390FC8C81B03D78AF81F759D481C3724105942FEE8D00CAB588BFE6B3
7071B1A01F183F4B9631C63DACCA4171713CF756312E3AAA7A333A99341589DE
6950B13F99B5134087382E8912061CEE076FA30B56F8302AAF7DEAD48066B9B9
044024DEAD0AA9BEECEBDB7083D5E3552A086DCF93BA3025DE589FCA65AC39A5
DD45909ACB991143730DFE36B7DE1C16685B0335B2B2B1DC8533B21CAE675DB2
C7978B218CEEF6B6E84B7361D8CD90AF73EDDF9BEBC9FB68FE59401EA3293CAA
438914E83D834E6F8A5ECADA81A8E044413728A4A1A84C91006771D851ED89A3
40106515DFC9099C6D1B9A95CB85B4BDDDD3A8BC4304A640B566B6915D9EBBB1
DB9928E72557A4A35F82C72479B66BB73E4541C66F4FFF2F85BB46ABA37B3CAB
1DC56F48648689B5A05912A2F4A349139EB1C4E846BA274FBA238FE979A4A02F
36C06FA7B26292F5C8258EA4B93D9C09D24511321DA6616D0714E6C3221B9955
27DC000A399A3E4B0C57400D4B3F2677553B72DB55FB81ACE0C560519D62BA33
A511370F5C353F3FC03D93F0F4837DA0FC5D20C957D688C895687010C734AEC0
D13A2A15DAED3526F16C42BD661D27079733330715DC40F80041603CE71AD954
E4AFA2C19C376318EF94D89AF9987EEB969B21468BE28A41E8243609A9435AD6
A08142A8D2C89226BF5C4DA2C350E3D4C6A6FF79AF49C8B7E6D4DF91DC06149D
95EA9835FC5B60E5D79E732ED94BA52978F13FEE6A7541851C3D26D604476475
E3BC7A6D81A9BB320F6241F78B784BF9EB8196D9CC4576548CF700E77C28A4B7
5F4FEECA2A8F28EFECA50C96313026437F5644521DF60508B4C36477412DEA96
6679C22217753AFC5E16AFB4CC9ED38148310771BAD99FCD5E86AFF99407BF28
D8FA0786B2420D572E122FCB672C2F2FEF07985A7F24D46E6F04A1E9DECB4062
A0131EE819A3A7609FA11EC0694F2B3F90F1C28C8FE7152DEED55131C9111E29
0624DC3937EFA2C158FDBA4ECD8C0138521AE30219C3C9F14D43287DA21B10C1
5B0887FB001CB45E8851FA580BC0CCCF4C2BC71882AF71D9A3D80C9F2FCF5DCA
E54888EBA511CB3D4BDAD839507D5E5898BF3321A83AE7B8351ECB880DD566B3
68984C3ED3BA3DF08F4DB91684E54700150533CEB655BD53343B74DBBF4B1992
FBBF0595EBECF91D6538FE84F63B96AF063E75CD1923B426E924E5F4ABCDD461
543AAD54A1B9507B7A2BA75753A4D4886A2837DDBCC5679E2615FB656751EF3C
D4F460F8C548ABA8ABB72FC0D802792D1C1C1AA6FCE2CBDF7B4E6C8907CDE34C
FD586484521B047B1C55AB798C7364D738A5696A53103FC064F18AD3B29077BE
E39AA73D5C6BADD8956116997C0FDB5F92BE8BC21AEC46007C14575AC498276F
5E4A7AE7FD5A2863D9F3864944D029118B372BC476A15C6AFD2B053AEBAB407B
E695A3CF1A5C162BAF32F5B2BC8A32CD2EC2CCB1AEC192B7D4D11FD70065BD1B
400499359F8115F0EBF45CC722A983A66939699EA4DEEB2886C560FCBD8206CB
14EDFA64F6640B93F13354EBB143F2081C9F8F9D5FE8A5A1B5D7E101726F8DFD
8B6D321D550C9C60D1B29B612BB7E181DD606D460D4335A9C083D4C056CE60A6
419D1A89FDE4053164ED52537ACDB97FB918CA797B31C199450346ADEBEF4F95
86358C891BE10D78996BD2C5D6A092758045ACA4D3241D90E8850AB58642A7CD
DBC5A91C11CE63E3414930CA439184E61EC623FE22687DB9CF10CD88DED782CF
8037426836E1B1D67E1821F520B7C6C9FDA571EFA91DA6164FAA37DC83512F04
CEC301C6C6D36538086650FCC5A24E8E6BAF52FF45427A0000815DB4B28D0BE4
CB8656471630C9A38EC212249849A0E3E2DF4FEAC5CA773FD5ACCF80CFB1E179
203B0F51EAB5BB13B8C80EA8EC272DAFE2019D83AA64E3D76A235E3EDAA272BC
7944199963E1C7EBB389D33F1255087B2B18232F6BD67FFBDC986B50D4633761
9F86AF8F57D933CE1371A40427AC7311F94A5DD4372E8BB3418C74A55B03B214
C4782557482A96C79AA3A4AC698E7526A8EBDEF8B0E86861FA41780B5E6CFD5C
4E29B093728FF791F850BD820D668E9F0E5BB49DBD1EB3E7CC067A9E66CE83AA
3DBC0E3DABB185996B5D69B29620BEBF01FDBC35C1021900ACBF62155846FD22
B9A69D2E18F1FA6CC3D951C2715F78382B6DE36D1A310AD8F56BB8E131295E6A
C47A38D18AAF093B263945EF2244024B0BB33C7EFFC193FDFCF94B3C2A37CDF1
0CD8D564A8694A024D30274B9ACFABC5972638D4E27C778104B91C18A0A9D34C
71B68179EAC221ED6FB5F2CF7EA3C2F065543EAFF5205F0A1471E6948CDA8311
B795CC9CDCB229452601BB2E491CADF31E28036635E07597D3000C478A91DFFD
C28DCD6B0FF6176C13E0F0CDFC568B5C86318ED12BA67ED92E5C27278E6A8FA8
FA9481CC943DE5E3AF4BAAA104849405F4CF8B50329077221E8DBA46C893C3B4
A2B3E14AD0E3B6634A2059F4561189EA57999828C62C538CE7573F922276A172
07B6AED2226D48EB567A9D9F75683C285F2A835A29D8DBC7137B098ECA4EBD63
833FCB18FCD764A3B470C08F3B488AF95CA1C979447E7910AB20A1613858A768
ADBA80076851D26766ACD5626B5EC0E25485EFEEE8934E629065F4C3D07A66CA
D2F303F732BFA7467D908AF19EC5BE7AB9D6AFEB2E5B02727AA1A9BF81E963DC
52ACEFFE940325437EBC875C9536743175BAE5632457DAD3DEF29DFA00A441F3
6995F69973DEA2B8261ABA476C7724BAE35A614DD8A35EB7F958DCE91B8EEA93
FCD6EBF89232B34BD8D1A616C68C6D65F20356FFD7853BA53121BF038E54A240
D6FB684A65FC13CBCE024C278772CDDFE54D42AED468CEDE89A145B6D03F9505
9CFA32E2FB710126642B2665536F77DD9AA369273229FF38F01B187F9DCABA68
7DC6EFB58500E06E0195F779C8A8F8126EB8D7DB952DC353FF234294EB43006D
58C31A5734D41E1D6153FDD5B78F4834C9DA038CC5922C0891DE1E263D091C99
408653AA149F8C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 94725720 71044290 1000 600 600 (poster.dvi)
@start /Fa 139[32 42 39 2[54 3[55 1[29 3[48 61 44 5[33
1[33 3[100 37[50 2[25 46[{ TeXBase1Encoding ReEncodeFont }14
99.6264 /URWPalladioL-Roma rf /Fb 166[153 69[88 88 18[{}3
119.552 /CMEX10 rf /Fc 149[23 105[65{}2 83.022 /CMSY10
rf /Fd 145[41 110[{}1 58.1154 /CMMI7 rf /Fe 143[100 90[93
3[93 1[60 8[93 5[93{}6 119.552 /CMSY10 rf /Ff 174[93
81[{}1 119.552 /MSBM10 rf /Fg 144[59 1[98 8[65 38[91
2[33 2[59 1[59 59 59 59 59 59 4[91 1[46 46 38[98 1[{}16
119.552 /CMR12 rf /Fh 199[42 1[42 1[42 42 42 42 42 4[65
43[{}8 83.022 /CMR10 rf /Fi 192[53 63[{ TeXBase1Encoding ReEncodeFont }
1 119.552 /URWPalladioL-Bold rf /Fj 134[41 8[42 1[50
13[35 26[61 56[47 53 11[{}7 83.022 /CMMI10 rf /Fk 133[54
57 1[84 57 67 4[59 1[70 6[56 3[50 50 1[49 6[68 97 9[94
7[76 87 6[91 2[33 33 45[66 74 11[{}21 119.552 /CMMI12
rf /Fl 134[80 80 112 80 88 48 80 56 88 88 88 88 128 40
80 1[40 88 88 48 80 88 80 88 80 9[135 2[88 96 104 1[96
2[120 88 4[112 88 96 1[104 1[104 14[80 80 1[40 47[{
 TeXBase1Encoding ReEncodeFont }39 143.462 /NimbusSanL-Bold
rf /Fm 138[105 57 96 67 2[105 105 1[48 2[48 105 1[57
96 105 96 1[96 12[105 1[124 4[143 3[48 5[124 13[96 1[96
1[96 49[{ TeXBase1Encoding ReEncodeFont }22 172.188 /NimbusSanL-Bold
rf /Fn 133[60 66 62 100 68 72 39 51 47 67 72 65 70 106
35 66 28 35 70 66 40 57 73 53 66 60 3[40 1[40 3[120 2[73
63 2[72 2[113 73 1[40 40 1[91 66 2[85 73 93 10[60 3[60
60 60 1[30 40 30 41[72 2[{ TeXBase1Encoding ReEncodeFont }49
119.552 /URWPalladioL-Roma rf /Fo 169[104 2[75 8[48 48
119 4[102 25[48 48 40[{ TeXBase1Encoding ReEncodeFont }8
143.462 /URWPalladioL-Roma rf /Fp 169[83 1[70 60 77 2[90
95 109 70 2[39 95 88 1[70 89 81 70 89 65[{
 TeXBase1Encoding ReEncodeFont }16 114.77 /URWPalladioL-Roma
rf /Fq 136[248 165 182 99 132 116 182 182 165 182 1[99
2[99 2[116 149 1[132 1[149 13[182 215 1[182 3[182 4[248
71[{ TeXBase1Encoding ReEncodeFont }21 297.468 /URWPalladioL-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black -583 -694
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -583 -694 a -583 -694 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -583 -694 a 0 TeXcolorgray
116 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 0.0 1442.55473 -1081.20473 .5 Frame
 gsave false 1 0.0 0.0  gsave 0.4 0.4 1  setrgbcolor currentrgbcolor
grestore gsave 0.85 0.4 1  setrgbcolor currentrgbcolor grestore 300
0.1 0. false tx@GradientDict begin GradientFill end grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 2633 299 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 3.8 neg 76.21797 neg 668.6937 83.41795
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 0.5 0.35 TeXcolorrgb
3082 -15 a Fq(Perfect)73 b(Powers)h(in)g(Lucas)g(Sequences)3582
284 y(via)g(Galois)h(Representations)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 3494 533 a Fo(J)8 b Fp(E)g(S)g(S)g(E)40
b Fo(S)8 b Fp(I)g(L)g(L)g(I)g(M)f(A)h(N)37 b Fo(\()8
b(C)g Fp(H)g(I)g(C)g(A)g(G)g(O)f Fo(\))37 b Fp(A)8 b(N)g(D)42
b Fo(I)8 b Fp(S)g(A)g(B)g(E)g(L)40 b Fo(V)8 b Fp(O)g(G)g(T)40
b Fo(\()8 b(H)g Fp(A)g(R)r(V)-5 b(A)8 b(R)f(D)g Fo(\))p
0 TeXcolorgray 0.6 0.3 0 TeXcolorrgb 4053 734 a Fn(Joint)29
b(Mathematical)g(Meetings,)59 b(Baltimor)n(e,)30 b(Maryland)p
0 TeXcolorgray -583 1167 a
 currentpoint currentpoint translate 0.75385 0.75385 scale neg exch
neg exch translate
 -583 1167 a 0 TeXcolorgray
-229 -636 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 21.34245 neg 431.47702 28.54243
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0
TeXcolorgray 0 TeXcolorgray 15 x Fm(1)p 1 0 0 TeXcolorrgb
119 w(Intr)m(oduction)p -14 -592 1001 7 v 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -229 627 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 101.38171 neg 431.47702 108.5817
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -673 x Fl(Abstract)p 0 TeXcolorgray
0 TeXcolorgray -229 180 a Fn(Let)k Fk(u)41 198 y Fj(n)128
180 y Fn(be)h(a)e(nondegenerate)i(Lucas)e(sequence.)49
b(W)-11 b(e)34 b(generalize)g(the)g(r)n(e-)-229 321 y(sults)26
b(of)g(Bugeaud,)i(Mignotte,)g(and)e(Siksek)h([)p Fi(?)p
Fn(])f(to)h(give)g(a)f(systematic)g(ap-)-229 462 y(pr)n(oach)32
b(towar)n(ds)h(the)g(pr)n(oblem)f(of)h(determining)g(all)f(perfect)i
(powers)e(in)-229 603 y(any)26 b(particular)h(Lucas)f(sequence.)36
b(W)-11 b(e)27 b(then)f(pr)n(ove)h(a)f(general)h(bound)g(on)-229
744 y(admissible)i(prime)g(powers)i(in)e(a)h(Lucas)g(sequence)h
(assuming)e(the)h(Fr)n(ey-)-229 885 y(Mazur)k(conjectur)n(e)h(on)f
(isomorphic)g(mod)g Fk(p)g Fn(Galois)g(r)n(epr)n(esentations)g(of)-229
1027 y(elliptic)f(curves.)48 b(Finally)33 b(we)h(develop)f(a)h
(computationally)e(ef)n(\002cient)i(el-)-229 1168 y(ementary)42
b(sieve)h(to)f(conditionally)g(determine)h(all)f(powers)g(in)g(several)
-229 1309 y(mor)n(e)30 b(example)f(sequences.)p 0 TeXcolorgray
-229 2274 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 67.5977 neg 431.47702 74.7977
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0
TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb -388 x
Fl(Motiv)m(ation/Pre)n(vious)35 b(W)-9 b(ork)p 0 TeXcolorgray
0 TeXcolorgray -229 2111 a Fn(In)52 b(2006,)57 b(Bugeaud,)h(Mignotte,)g
(and)52 b(Siksek)h(pr)n(oved)f(that)g Fk(F)2807 2129
y Fh(0)2927 2111 y Fg(=)74 b(0)3151 2068 y Fj(p)3197
2111 y Fn(,)-229 2252 y Fk(F)-153 2270 y Fh(1)-70 2252
y Fg(=)38 b(1)118 2209 y Fj(p)163 2252 y Fn(,)33 b Fk(F)302
2270 y Fh(6)385 2252 y Fg(=)38 b(2)573 2209 y Fh(3)619
2252 y Fn(,)32 b(and)g Fk(F)992 2270 y Fh(12)1117 2252
y Fg(=)38 b(12)1364 2209 y Fh(2)1441 2252 y Fn(ar)n(e)32
b(the)h(only)f(perfect)h(powers)f(in)g(the)-229 2393
y(Fibonacci)h(sequence.)47 b(Their)33 b(pr)n(oof)h(r)n(elied)f(upon)g
(the)g(theory)h(of)f(elliptic)-229 2535 y(curves)i(and)g(their)g
(associated)g(Galois)g(r)n(epr)n(esentations,)h(especially)f(the)-229
2676 y(modularity)30 b(theor)n(em)g(for)g(elliptic)f(curves)h(over)g
Ff(Q)p Fn(.)p 0 TeXcolorgray -229 4306 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 147.6721 neg 431.47702 154.8721
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -1053 x Fl(Lucas)38 b(Sequences)p 0
TeXcolorgray 0 TeXcolorgray -229 3478 a Fn(A)32 b(Lucas)f(sequence)h
Fk(u)819 3496 y Fj(n)904 3478 y Fn(is)f(a)h(nondegenerate)g(integral)g
(linear)f(binary)h(r)n(e-)-229 3619 y(curr)n(ence)e(r)n(elation)g
(de\002ned)g(by)1011 3876 y Fk(u)1078 3894 y Fj(n)p Fh(+2)1271
3876 y Fg(=)j Fk(bu)1512 3894 y Fj(n)p Fh(+1)1698 3876
y Fg(+)27 b Fk(cu)1933 3894 y Fj(n)-229 4134 y Fn(with)i
Fk(u)111 4152 y Fh(0)190 4134 y Fg(=)34 b(0)c Fn(and)g
Fk(u)704 4152 y Fh(1)783 4134 y Fg(=)k(1)p Fn(.)k(The)30
b(companion)f(sequence)i Fk(v)2462 4152 y Fj(n)2546 4134
y Fn(is)e(de\002ned)i(by)-229 4275 y Fk(v)-172 4293 y
Fj(n)p Fh(+2)23 4275 y Fg(=)36 b Fk(bv)257 4293 y Fj(n)p
Fh(+1)444 4275 y Fg(+)28 b Fk(cv)670 4293 y Fj(n)755
4275 y Fn(with)i Fk(v)1086 4293 y Fh(0)1167 4275 y Fg(=)36
b(2)31 b Fn(and)g Fk(v)1675 4293 y Fh(1)1756 4275 y Fg(=)36
b Fk(b)p Fn(.)k(A)32 b(Lucas)f(sequence)g Fg(\()p Fk(b;)20
b(c)p Fg(\))-229 4416 y Fn(has)29 b(characteristic)g(polynomial)g(and)g
(r)n(oots)243 4765 y Fk(g)t Fg(\()p Fk(z)5 b Fg(\))34
b(=)f Fk(z)671 4715 y Fh(2)744 4765 y Fe(\000)26 b Fk(bz)32
b Fe(\000)27 b Fk(c;)498 b(\013)q(;)20 b(\014)40 b Fg(=)2068
4684 y Fk(b)26 b Fe(\006)2264 4584 y(p)p 2363 4584 349
5 v 2363 4684 a Fk(b)2413 4649 y Fh(2)2485 4684 y Fg(+)h(4)p
Fk(c)p 2068 4737 645 5 v 2361 4847 a Fg(2)2722 4765 y
Fk(;)-229 5082 y Fn(and)34 b(we)h(may)g(write)f Fk(u)846
5100 y Fj(n)942 5082 y Fg(=)1086 5029 y Fj(\013)1139
4999 y Fd(n)1185 5029 y Fc(\000)p Fj(\014)1301 4999 y
Fd(n)p 1086 5055 260 5 v 1131 5123 a Fj(\013)p Fc(\000)p
Fj(\014)1390 5082 y Fn(and)h Fk(v)1685 5100 y Fj(n)1781
5082 y Fg(=)42 b Fk(\013)1989 5039 y Fj(n)2074 5082 y
Fg(+)30 b Fk(\014)2268 5039 y Fj(n)2322 5082 y Fn(,)36
b(which)d(gives)i(the)-229 5235 y(r)n(elations)838 5376
y Fg(\()p Fk(b)934 5327 y Fh(2)1006 5376 y Fg(+)26 b(4)p
Fk(c)p Fg(\))p Fk(u)1345 5327 y Fh(2)1345 5406 y Fj(n)1432
5376 y Fg(=)33 b Fk(v)1617 5327 y Fh(2)1613 5406 y Fj(n)1693
5376 y Fe(\000)27 b Fg(4\()p Fe(\000)p Fk(c)p Fg(\))2107
5327 y Fj(n)p 0 TeXcolorgray -229 6883 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 133.2483 neg 431.47702 140.44829
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -189 5949 a Fl(Fre)n(y)38 b(Elliptic)h(Cur)q(ves)p
0 TeXcolorgray 0 TeXcolorgray -229 6174 a Fn(Some)30
b(explanation)-229 6457 y(Consider)41 b(a)g(hypothetical)g(solution)g
Fk(u)1638 6475 y Fj(n)1746 6457 y Fg(=)54 b Fk(y)1952
6413 y Fj(p)2040 6457 y Fn(to)41 b(the)h(Lucas)f(sequence)-229
6598 y Fg(\(3)p Fk(;)20 b Fe(\000)p Fg(2\))p Fn(,)27
b(then)i Fg(13)p Fk(y)628 6554 y Fh(2)p Fj(p)742 6598
y Fg(+)d(2)918 6554 y Fj(n)p Fh(+2)1111 6598 y Fg(=)33
b Fk(v)1296 6554 y Fh(2)1292 6627 y Fj(n)1346 6598 y
Fn(.)k(Let)30 b Fk(E)37 b Fn(be)30 b(the)g(Fr)n(ey)h(elliptic)e(curve)
344 6929 y Fk(E)39 b Fg(:)33 b Fk(Y)630 6880 y Fh(2)702
6929 y Fg(+)27 b Fk(X)9 b(Y)60 b Fg(=)33 b Fk(X)1284
6880 y Fh(3)1357 6929 y Fg(+)1474 6761 y Fb(\022)1572
6849 y Fk(w)1656 6866 y Fj(n)1736 6849 y Fe(\000)27 b
Fg(1)p 1572 6902 343 5 v 1714 7011 a(4)1925 6761 y Fb(\023)2032
6929 y Fk(X)2138 6880 y Fh(2)2211 6929 y Fg(+)g(2)2388
6880 y Fj(n)p Fc(\000)p Fh(4)2547 6929 y Fk(X)-229 7257
y Fn(wher)n(e)32 b Fk(w)216 7275 y Fj(n)306 7257 y Fg(=)38
b Fe(\006)p Fk(v)585 7275 y Fj(n)670 7257 y Fn(so)32
b(that)g Fk(w)1142 7275 y Fj(n)1232 7257 y Fe(\021)37
b Fg(1)53 b(\(mo)s(d)39 b(4\))p Fn(,)31 b(and)h Fk(n)37
b Fe(\025)g Fg(5)p Fn(.)43 b(Then)31 b(we)h(can)-229
7398 y(compute)e(the)f(discriminant)f(and)i(conductor)566
7682 y Fg(\001)664 7700 y Fj(E)767 7682 y Fg(=)j(2)950
7633 y Fh(2)p Fj(n)p Fc(\000)p Fh(8)1151 7682 y Fk(y)1212
7633 y Fh(2)p Fj(p)1778 7682 y Fk(N)1872 7700 y Fj(E)1975
7682 y Fg(=)g(2)2178 7569 y Fb(Y)2203 7830 y Fj(`)p Fc(j)p
Fj(y)2350 7682 y Fk(`:)p 0 TeXcolorgray 3629 1360 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 21.20244 neg 431.47702 28.40244
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
14 x Fm(3)p 1 0 0 TeXcolorrgb 119 w(The)48 b(Modular)g(Method)p
3844 1403 1684 7 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
3629 2044 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 31.68253 neg 431.47702 38.88252
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0
TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb 3669 1954
a Fl(Galois)38 b(Representations)p 0 TeXcolorgray 0 TeXcolorgray
3629 2179 a Fn(Stuf)n(f)p 0 TeXcolorgray 3629 2814 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 31.68253 neg 431.47702 38.88252
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb 3669 2724 a Fl(Modularity)f(of)i
(Elliptic)f(Cur)q(ves)p 0 TeXcolorgray 0 TeXcolorgray
3629 2949 a Fn(Stuf)n(f)p 0 TeXcolorgray 3629 3584 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 31.58318 neg 431.47702 38.78317
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb 3669 3493 a Fl(Le)n(vel)g(Lo)n(wering)
p 0 TeXcolorgray 0 TeXcolorgray 3629 3718 a Fn(Stuf)n(f)p
0 TeXcolorgray 3629 4368 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 33.38171 neg 431.47702 40.5817
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb
3669 4260 a Fl(Example)p 0 TeXcolorgray 0 TeXcolorgray
3629 4485 a Fn(Pr)n(ove)30 b(that)f(now)h(pth)f(powers)h(for)g
Fk(p)j(>)g Fg(7)d Fn(for)g(pr)n(evious)f(example.)p 0
TeXcolorgray 7487 1360 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 21.20244 neg 431.47702 28.40244
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 14 x Fm(3)p 1 0 0 TeXcolorrgb
119 w(Results)p 7702 1403 622 7 v 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 7487 1922 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 16.96031 neg 431.47702 24.16031
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 0 TeXcolorgray 13 x Fn(Theor)n(em)h(1)g(and)f(Theor)n(em)h
(2.)p 0 TeXcolorgray 7487 2458 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 18.162 neg 431.47702 25.36198
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 0 TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb
22 x Fl(Sketc)o(h)38 b(of)h(Pr)m(oof)f(of)i(Theorem)d(1)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 7487 3004
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 18.162 neg 431.47702 25.36198
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb 22 x(Sketc)o(h)h(of)h(Pr)m(oof)f(of)i
(Theorem)d(2)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
11345 -635 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 21.54985 neg 431.47702 28.74985
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0
TeXcolorgray 0 TeXcolorgray 16 x Fm(5)p 1 0 0 TeXcolorrgb
119 w(Conc)m(lusion)p 11560 -589 982 7 v 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 11345 50 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 31.46654 neg 431.47702 38.66652
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 0 1 TeXcolorrgb -92 x Fl(Examples)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 11343 183 a Fe(\017)p 0
TeXcolorgray 59 w Fn(Some)29 b(stuf)n(f.)p 0 TeXcolorgray
11345 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 31.46654 neg 431.47702 38.66652
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0
TeXcolorgray 0 TeXcolorgray 0 0 1 TeXcolorrgb -92 x Fl(Future)38
b(W)-9 b(ork)p 0 TeXcolorgray 0 TeXcolorgray 11345 950
a Fn(T)e(ext)30 b(her)n(e.)p 0 TeXcolorgray 11345 1670
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 41.88171 neg 431.47702 49.0817
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 0 1 TeXcolorrgb -178 x Fl(Ac)m(kno)n(wledg)q(ements)p
0 TeXcolorgray 0 TeXcolorgray 11345 1717 a Fn(I)g(would)g(like)g(to)g
(thank)f(.)18 b(.)g(.)p 0 TeXcolorgray 11343 1858 a Fe(\017)p
0 TeXcolorgray 59 w Fn(Some)29 b(people.)p 0 TeXcolorgray
11345 2542 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0. true 15.2 neg 33.71698 neg 431.47702 40.91698
.5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore
stroke grestore gsave 1  setgray gsave fill grestore stroke grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0
TeXcolorgray 0 TeXcolorgray 1 0 0 TeXcolorrgb -87 x Fm(Ref)n(erences)p
11345 2484 927 7 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
11394 2678 a Fa([1])p 0 TeXcolorgray 59 w(W)-9 b(orks)26
b(cited.)p 0 TeXcolorgray 0 TeXcolorgray -583 1167 a
 currentpoint currentpoint translate 1 0.75385 div 1 0.75385 div scale
neg exch neg exch translate

-583 1167 a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
